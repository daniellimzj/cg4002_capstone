// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __myip_v1_0_HLS_weitde_H__
#define __myip_v1_0_HLS_weitde_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct myip_v1_0_HLS_weitde_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 172;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(myip_v1_0_HLS_weitde_ram) {
        ram[0] = "0b10111101101001010010001100100101";
        ram[1] = "0b00111110010110101010111000000110";
        ram[2] = "0b10111101011010010000010100000111";
        ram[3] = "0b10111110001011100100111100101011";
        ram[4] = "0b10111010111010111001101101011011";
        ram[5] = "0b00111110001101111000111111101011";
        ram[6] = "0b00111101110100011000010000100011";
        ram[7] = "0b10111101111001110110010110010000";
        ram[8] = "0b00111110011101101001001010110011";
        ram[9] = "0b10111101000001110000000001011000";
        ram[10] = "0b10111110000001101100110001101100";
        ram[11] = "0b10111101111001011011111000010010";
        ram[12] = "0b00111101101000100100111000111101";
        ram[13] = "0b00111110100101011111101110000010";
        ram[14] = "0b00111110001101100101110000001000";
        ram[15] = "0b10111110010110010111000010000001";
        ram[16] = "0b10111110000101011110111110110100";
        ram[17] = "0b10111110011011101111100010011010";
        ram[18] = "0b00111101101000110001110111100101";
        ram[19] = "0b10111110100000111010101010001000";
        ram[20] = "0b10111110001000110011001110000000";
        ram[21] = "0b10111101110000010010000010000001";
        ram[22] = "0b10111110001101110000000010010000";
        ram[23] = "0b00111101101010001010111001000010";
        ram[24] = "0b10111110000010101001100111000110";
        ram[25] = "0b10111101111111010110111000000110";
        ram[26] = "0b10111101101110000001011010101101";
        ram[27] = "0b00111101010001110101011100010000";
        ram[28] = "0b10111101001111000100010010100110";
        ram[29] = "0b00111101011001111000000111010110";
        ram[30] = "0b10111101100011010000000001011111";
        ram[31] = "0b10111101110011101100110011111010";
        ram[32] = "0b00111110001011000100000111111001";
        ram[33] = "0b10111100010001110101100100111000";
        ram[34] = "0b00111101000011110010101011000011";
        ram[35] = "0b10111110000110010111010011000000";
        ram[36] = "0b00111101110011011010000100000110";
        ram[37] = "0b10111101110011000110101001100100";
        ram[38] = "0b10111101000011010101111101000101";
        ram[39] = "0b00111101000111000010010110011000";
        ram[40] = "0b00111101011000101000010101100000";
        ram[41] = "0b10111101010111001100100111101100";
        ram[42] = "0b00111101011110000101000011001111";
        ram[43] = "0b10111101000011001110100010000000";
        ram[44] = "0b10111101110000001111100001000101";
        ram[45] = "0b00111101100110100110010110111110";
        ram[46] = "0b10111100100111001010001011010110";
        ram[47] = "0b00111110100010000001011110000011";
        ram[48] = "0b00111101100000001101001000011101";
        ram[49] = "0b10111101100001000011000010111101";
        ram[50] = "0b00111110000111101000101000110011";
        ram[51] = "0b10111101110000101010011110001001";
        ram[52] = "0b00111110011001111100110010000001";
        ram[53] = "0b00111110001011011011010001001110";
        ram[54] = "0b10111110000101010110000011011100";
        ram[55] = "0b10111101111001000110010111101100";
        ram[56] = "0b00111011110000000111111111001001";
        ram[57] = "0b10111100110000101101001110110001";
        ram[58] = "0b00111100011111110110000000001011";
        ram[59] = "0b10111110001110100111010111011001";
        ram[60] = "0b10111100111000100100010001100111";
        ram[61] = "0b00111101111011000100100100111100";
        ram[62] = "0b10111101000010011101000001010001";
        ram[63] = "0b00111110000010001011100110110111";
        ram[64] = "0b00111101110011011111111001011100";
        ram[65] = "0b00111101110100000110110100100000";
        ram[66] = "0b00111110100001110001011010000001";
        ram[67] = "0b00111101001110000001001010110111";
        ram[68] = "0b10111101010111101010111111111001";
        ram[69] = "0b00111101011101110111100111100101";
        ram[70] = "0b10111101001100001110010011110001";
        ram[71] = "0b00111101100001001111011111110110";
        ram[72] = "0b10111100001100100010010110110100";
        ram[73] = "0b10111101010110000010011000010110";
        ram[74] = "0b00111110000000110111001001001000";
        ram[75] = "0b00111110000100000000111110001001";
        ram[76] = "0b10111101000000111010001000111100";
        ram[77] = "0b10111101100111010111111111000000";
        ram[78] = "0b10111100111110100101000111111010";
        ram[79] = "0b00111101101000101010100101000111";
        ram[80] = "0b00111110010000100011000010111000";
        ram[81] = "0b00111100110001100101111011110110";
        ram[82] = "0b10111101101101110001011110010000";
        ram[83] = "0b10111100001011100110111111110111";
        ram[84] = "0b00111101001010110101101000101011";
        ram[85] = "0b00111101100110100011011111101001";
        ram[86] = "0b00111110000111010001111011000101";
        ram[87] = "0b10111101101010001111100101000100";
        ram[88] = "0b00111110000010100011111000010000";
        ram[89] = "0b10111110000101100011100001010110";
        ram[90] = "0b10111110010100001101111011000000";
        ram[91] = "0b10111101011000110010001000111000";
        ram[92] = "0b00111101100100001111000011011111";
        ram[93] = "0b00111110101101011111111011111101";
        ram[94] = "0b10111101110110011101100101011111";
        ram[95] = "0b00111101011101001101001010101110";
        ram[96] = "0b10111110001101111011000000100111";
        ram[97] = "0b00111110010101001011101100010111";
        ram[98] = "0b10111101101010101000101001001110";
        ram[99] = "0b10111101110100100000101001011010";
        ram[100] = "0b10111110010011001010010001001100";
        ram[101] = "0b10111101111000000111001100100001";
        ram[102] = "0b00111101100001001010100011000010";
        ram[103] = "0b10111110000110110000110010111011";
        ram[104] = "0b10111110000011100110110101000110";
        ram[105] = "0b10111110001101101100101001100101";
        ram[106] = "0b00111110000101110100100001011110";
        ram[107] = "0b00111101011010010011011000100100";
        ram[108] = "0b10111110001110100100110100000000";
        ram[109] = "0b00111101101000000011010000010110";
        ram[110] = "0b10111011001001001010001111111011";
        ram[111] = "0b10111101011111100011101011101111";
        ram[112] = "0b00111110001001011001100011000110";
        ram[113] = "0b10111101100100000010111100000111";
        ram[114] = "0b00111110000110111111000101011110";
        ram[115] = "0b00111101110101101010001111001011";
        ram[116] = "0b00111110100100001000100101000011";
        ram[117] = "0b00111101100010101010000000100110";
        ram[118] = "0b00111101100000111010100011110000";
        ram[119] = "0b10111101110110001100110100101010";
        ram[120] = "0b10111110011010111111011111100011";
        ram[121] = "0b00111101101100010101110110000110";
        ram[122] = "0b10111100010100001010100101001011";
        ram[123] = "0b00111110001010011111000111111010";
        ram[124] = "0b10111101100111000111100011100100";
        ram[125] = "0b00111101111101100100010111011110";
        ram[126] = "0b10111101100000000111011110111110";
        ram[127] = "0b10111100101010011011001100001100";
        ram[128] = "0b10111101101111101100101001011011";
        ram[129] = "0b10111101011101010111101110010101";
        ram[130] = "0b00111101000100101101001101011000";
        ram[131] = "0b10111101001101010010111011001000";
        ram[132] = "0b10111110000011010001000100111001";
        ram[133] = "0b00111011100100100000111100010101";
        ram[134] = "0b00111110010111110001010101100111";
        ram[135] = "0b00111110010110110111001101001011";
        ram[136] = "0b00111110010101111010000100110011";
        ram[137] = "0b00111101001111111101011010010110";
        ram[138] = "0b00111100010110010001011000101010";
        ram[139] = "0b10111110000101100101000110001010";
        ram[140] = "0b00111101101111110111111100011110";
        ram[141] = "0b00111100110100111101010101001101";
        ram[142] = "0b00111100000010101101101100000001";
        ram[143] = "0b00111110000011001010101100011110";
        ram[144] = "0b00111110001011010010001001001010";
        ram[145] = "0b00111101011010001000100001111011";
        ram[146] = "0b10111100110100000101010101101110";
        ram[147] = "0b10111110001000010111010111110110";
        ram[148] = "0b00111110001011111100001101100110";
        ram[149] = "0b10111110001110000100001111001011";
        ram[150] = "0b00111110001001000110110101100001";
        ram[151] = "0b10111110011101010011101011111100";
        ram[152] = "0b00111101100111010000011110101101";
        ram[153] = "0b00111110010111010000100111111010";
        ram[154] = "0b00111100000111101011011010011101";
        ram[155] = "0b10111101010100101011010101010101";
        ram[156] = "0b00111110011010000011010101010110";
        ram[157] = "0b10111100110010010100110101110011";
        ram[158] = "0b10111101111100110100010000101000";
        ram[159] = "0b10111100111001101100110001011011";
        ram[160] = "0b10111101011111011111101000111100";
        ram[161] = "0b00111101100011111100110010111101";
        ram[162] = "0b00111110000100110011111011000011";
        ram[163] = "0b00111100001100110000111101110001";
        ram[164] = "0b10111110001101100001101010010110";
        ram[165] = "0b00111110001001000011001010110000";
        ram[166] = "0b00111110001111001110111000011101";
        ram[167] = "0b10111101101010111011001011101101";
        ram[168] = "0b00111110000001111000011001011111";
        ram[169] = "0b00111101101100000010101010001100";
        ram[170] = "0b00111101100100010100100110000110";
        ram[171] = "0b00111110000000111100110010011000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(myip_v1_0_HLS_weitde) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 172;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


myip_v1_0_HLS_weitde_ram* meminst;


SC_CTOR(myip_v1_0_HLS_weitde) {
meminst = new myip_v1_0_HLS_weitde_ram("myip_v1_0_HLS_weitde_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~myip_v1_0_HLS_weitde() {
    delete meminst;
}


};//endmodule
#endif
