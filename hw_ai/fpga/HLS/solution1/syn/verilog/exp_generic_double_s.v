// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_generic_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] x;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] table_exp_Z1_array_s_address0;
reg    table_exp_Z1_array_s_ce0;
wire   [57:0] table_exp_Z1_array_s_q0;
wire   [7:0] table_f_Z3_array_V_address0;
reg    table_f_Z3_array_V_ce0;
wire   [25:0] table_f_Z3_array_V_q0;
wire   [7:0] table_f_Z3_array_V_address1;
reg    table_f_Z3_array_V_ce1;
wire   [25:0] table_f_Z3_array_V_q1;
wire   [7:0] table_f_Z2_array_V_address0;
reg    table_f_Z2_array_V_ce0;
wire   [41:0] table_f_Z2_array_V_q0;
wire   [0:0] p_Result_22_fu_265_p3;
reg   [0:0] p_Result_22_reg_1149;
reg   [0:0] p_Result_22_reg_1149_pp0_iter1_reg;
reg   [0:0] p_Result_22_reg_1149_pp0_iter2_reg;
reg   [0:0] p_Result_22_reg_1149_pp0_iter3_reg;
reg   [0:0] p_Result_22_reg_1149_pp0_iter4_reg;
reg   [0:0] p_Result_22_reg_1149_pp0_iter5_reg;
wire   [0:0] and_ln209_fu_299_p2;
reg   [0:0] and_ln209_reg_1154;
reg   [0:0] and_ln209_reg_1154_pp0_iter1_reg;
reg   [0:0] and_ln209_reg_1154_pp0_iter2_reg;
reg   [0:0] and_ln209_reg_1154_pp0_iter3_reg;
reg   [0:0] and_ln209_reg_1154_pp0_iter4_reg;
reg   [0:0] and_ln209_reg_1154_pp0_iter5_reg;
wire   [0:0] and_ln18_fu_311_p2;
reg   [0:0] and_ln18_reg_1161;
reg   [0:0] and_ln18_reg_1161_pp0_iter1_reg;
reg   [0:0] and_ln18_reg_1161_pp0_iter2_reg;
reg   [0:0] and_ln18_reg_1161_pp0_iter3_reg;
reg   [0:0] and_ln18_reg_1161_pp0_iter4_reg;
reg   [0:0] and_ln18_reg_1161_pp0_iter5_reg;
wire   [53:0] select_ln253_fu_341_p3;
reg   [53:0] select_ln253_reg_1167;
reg   [53:0] select_ln253_reg_1167_pp0_iter1_reg;
reg   [53:0] select_ln253_reg_1167_pp0_iter2_reg;
reg   [53:0] select_ln253_reg_1167_pp0_iter3_reg;
reg   [53:0] select_ln253_reg_1167_pp0_iter4_reg;
wire  signed [70:0] r_V_13_fu_415_p3;
reg  signed [70:0] r_V_13_reg_1172;
wire  signed [12:0] r_exp_V_3_fu_522_p3;
reg  signed [12:0] r_exp_V_3_reg_1177;
reg  signed [12:0] r_exp_V_3_reg_1177_pp0_iter1_reg;
reg  signed [12:0] r_exp_V_3_reg_1177_pp0_iter2_reg;
reg  signed [12:0] r_exp_V_3_reg_1177_pp0_iter3_reg;
reg  signed [12:0] r_exp_V_3_reg_1177_pp0_iter4_reg;
wire   [0:0] icmp_ln338_fu_530_p2;
reg   [0:0] icmp_ln338_reg_1184;
reg   [0:0] icmp_ln338_reg_1184_pp0_iter1_reg;
reg   [0:0] icmp_ln338_reg_1184_pp0_iter2_reg;
reg   [0:0] icmp_ln338_reg_1184_pp0_iter3_reg;
reg   [0:0] icmp_ln338_reg_1184_pp0_iter4_reg;
wire   [0:0] icmp_ln338_1_fu_552_p2;
reg   [0:0] icmp_ln338_1_reg_1192;
reg   [0:0] icmp_ln338_1_reg_1192_pp0_iter1_reg;
reg   [0:0] icmp_ln338_1_reg_1192_pp0_iter2_reg;
reg   [0:0] icmp_ln338_1_reg_1192_pp0_iter3_reg;
reg   [0:0] icmp_ln338_1_reg_1192_pp0_iter4_reg;
reg   [7:0] m_diff_hi_V_reg_1197;
reg   [7:0] m_diff_hi_V_reg_1197_pp0_iter2_reg;
reg   [7:0] Z2_V_reg_1202;
reg   [7:0] Z2_V_reg_1202_pp0_iter2_reg;
reg   [7:0] Z2_V_reg_1202_pp0_iter3_reg;
reg   [7:0] Z3_V_reg_1209;
reg   [7:0] Z3_V_reg_1209_pp0_iter2_reg;
wire   [34:0] Z4_V_fu_628_p1;
reg   [34:0] Z4_V_reg_1215;
reg   [34:0] Z4_V_reg_1215_pp0_iter2_reg;
reg   [7:0] Z4_ind_V_reg_1220;
wire   [42:0] tmp_i_fu_677_p4;
reg   [42:0] tmp_i_reg_1240;
wire   [35:0] add_ln657_fu_714_p2;
reg   [35:0] add_ln657_reg_1245;
reg   [57:0] exp_Z1_V_reg_1255;
reg   [49:0] exp_Z1P_m_1_V_reg_1260;
reg   [49:0] exp_Z1_hi_V_reg_1265;
wire   [0:0] or_ln214_1_fu_834_p2;
reg   [0:0] or_ln214_1_reg_1270;
wire   [63:0] sel_tmp6_fu_1047_p3;
reg   [63:0] sel_tmp6_reg_1275;
wire   [0:0] sel_tmp16_fu_1089_p2;
reg   [0:0] sel_tmp16_reg_1280;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln498_1_fu_642_p1;
wire   [63:0] zext_ln498_2_fu_646_p1;
wire   [63:0] zext_ln498_fu_650_p1;
wire   [63:0] zext_ln498_3_fu_720_p1;
wire   [63:0] p_Val2_s_fu_261_p1;
wire   [10:0] tmp_V_fu_273_p4;
wire   [51:0] tmp_V_3_fu_283_p1;
wire   [0:0] icmp_ln833_fu_287_p2;
wire   [0:0] icmp_ln837_fu_293_p2;
wire   [0:0] icmp_ln833_3_fu_305_p2;
wire   [11:0] zext_ln502_fu_317_p1;
wire   [53:0] p_Result_s_fu_327_p3;
wire   [53:0] e_frac_V_fu_335_p2;
wire  signed [60:0] m_frac_l_V_fu_349_p3;
wire   [11:0] m_exp_fu_321_p2;
wire   [10:0] sub_ln1311_fu_369_p2;
wire   [0:0] isNeg_fu_361_p3;
wire  signed [11:0] sext_ln1311_fu_375_p1;
wire   [11:0] m_exp_2_fu_379_p3;
wire  signed [31:0] sext_ln1311_1_fu_387_p1;
wire   [60:0] zext_ln1285_fu_395_p1;
wire   [60:0] r_V_fu_399_p2;
wire  signed [70:0] sext_ln682_fu_357_p1;
wire   [70:0] zext_ln1287_fu_391_p1;
wire  signed [70:0] sext_ln1287_fu_405_p1;
wire   [70:0] r_V_1_fu_409_p2;
wire   [63:0] m_fix_l_V_fu_423_p4;
wire   [63:0] zext_ln1253_fu_433_p1;
wire  signed [15:0] m_fix_hi_V_fu_449_p4;
wire   [0:0] p_Result_23_fu_459_p3;
wire  signed [18:0] rhs_V_fu_471_p3;
wire  signed [30:0] grp_fu_1138_p3;
wire   [17:0] trunc_ln805_fu_499_p1;
wire   [12:0] tmp_5_fu_483_p4;
wire   [0:0] icmp_ln805_fu_502_p2;
wire   [12:0] add_ln805_fu_508_p2;
wire   [0:0] p_Result_15_fu_492_p3;
wire   [12:0] select_ln805_fu_514_p3;
wire   [63:0] r_V_3_fu_437_p2;
wire   [63:0] r_V_4_fu_443_p2;
wire   [63:0] select_ln1322_fu_536_p3;
wire   [70:0] shl_ln_fu_544_p3;
wire  signed [12:0] r_V_15_fu_561_p1;
wire   [83:0] r_V_15_fu_561_p2;
wire   [70:0] tmp_9_fu_570_p4;
wire   [71:0] rhs_V_1_fu_580_p3;
wire  signed [72:0] lhs_V_fu_567_p1;
wire  signed [72:0] sext_ln682_2_fu_588_p1;
wire   [72:0] ret_V_3_fu_592_p2;
wire   [9:0] f_Z4_V_fu_654_p4;
wire   [35:0] rhs_V_2_fu_667_p1;
wire   [35:0] lhs_V_1_fu_664_p1;
wire   [35:0] ret_V_4_fu_671_p2;
wire   [35:0] r_V_16_fu_694_p0;
wire   [42:0] r_V_16_fu_694_p1;
wire   [78:0] r_V_16_fu_694_p2;
wire   [19:0] tmp_s_fu_700_p4;
wire   [35:0] zext_ln657_fu_710_p1;
wire   [43:0] ret_V_5_fu_724_p1;
wire   [43:0] zext_ln657_1_fu_727_p1;
wire   [39:0] tmp_1_fu_736_p4;
wire   [48:0] lshr_ln662_6_fu_746_p4;
wire   [43:0] exp_Z2P_m_1_V_fu_730_p2;
wire   [43:0] r_V_17_fu_763_p0;
wire   [48:0] r_V_17_fu_763_p1;
wire   [92:0] r_V_17_fu_763_p2;
wire   [50:0] lhs_V_2_fu_779_p5;
wire   [35:0] tmp_2_fu_769_p4;
wire   [43:0] zext_ln657_2_fu_794_p1;
wire   [43:0] add_ln657_2_fu_798_p2;
wire   [51:0] zext_ln682_fu_790_p1;
wire   [51:0] zext_ln657_3_fu_804_p1;
wire   [51:0] exp_Z1P_m_1_l_V_fu_808_p2;
wire   [58:0] lhs_V_3_fu_838_p1;
wire   [49:0] r_V_18_fu_853_p0;
wire   [49:0] r_V_18_fu_853_p1;
wire   [58:0] ret_V_6_fu_841_p2;
wire   [99:0] r_V_18_fu_853_p2;
wire   [57:0] trunc_ln1146_fu_875_p1;
wire   [107:0] zext_ln657_5_fu_867_p1;
wire   [107:0] lhs_V_4_fu_859_p3;
wire   [106:0] trunc_ln_fu_879_p3;
wire   [106:0] zext_ln1146_fu_871_p1;
wire   [106:0] add_ln1146_1_fu_893_p2;
wire   [0:0] tmp_7_fu_899_p3;
wire   [12:0] r_exp_V_fu_907_p2;
wire   [12:0] r_exp_V_2_fu_912_p3;
wire   [2:0] tmp_8_fu_919_p4;
wire   [0:0] icmp_ln849_fu_929_p2;
wire   [0:0] tmp_10_fu_940_p3;
wire   [107:0] ret_V_7_fu_887_p2;
wire   [51:0] tmp_fu_961_p4;
wire   [51:0] tmp_6_fu_971_p4;
wire   [10:0] trunc_ln168_fu_989_p1;
wire   [10:0] out_exp_V_fu_993_p2;
wire   [51:0] tmp_V_4_fu_981_p3;
wire   [63:0] p_Result_24_fu_999_p4;
wire   [0:0] or_ln338_fu_935_p2;
wire   [0:0] xor_ln338_fu_1024_p2;
wire   [0:0] and_ln338_fu_1019_p2;
wire   [0:0] and_ln849_fu_1029_p2;
wire   [0:0] or_ln849_fu_1035_p2;
wire   [0:0] xor_ln214_fu_1013_p2;
wire   [0:0] sel_tmp5_fu_1041_p2;
wire   [63:0] select_ln339_fu_947_p3;
wire   [63:0] bitcast_ln512_fu_1009_p1;
wire   [0:0] xor_ln338_1_fu_1055_p2;
wire   [0:0] or_ln849_1_fu_1066_p2;
wire   [0:0] and_ln338_1_fu_1061_p2;
wire   [0:0] xor_ln849_fu_1071_p2;
wire   [0:0] or_ln849_2_fu_1077_p2;
wire   [0:0] tmp19_fu_1083_p2;
wire   [0:0] icmp_ln853_fu_955_p2;
wire   [0:0] xor_ln936_fu_1095_p2;
wire   [0:0] x_is_pinf_fu_1100_p2;
wire   [0:0] or_ln214_fu_1105_p2;
wire   [63:0] select_ln214_fu_1110_p3;
wire   [63:0] select_ln214_1_fu_1117_p3;
wire   [63:0] select_ln214_2_fu_1125_p3;
wire   [15:0] grp_fu_1138_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [78:0] r_V_16_fu_694_p00;
wire   [78:0] r_V_16_fu_694_p10;
wire   [92:0] r_V_17_fu_763_p00;
wire   [92:0] r_V_17_fu_763_p10;
wire   [99:0] r_V_18_fu_853_p00;
wire   [99:0] r_V_18_fu_853_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

exp_generic_doublbkb #(
    .DataWidth( 58 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_exp_Z1_array_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_exp_Z1_array_s_address0),
    .ce0(table_exp_Z1_array_s_ce0),
    .q0(table_exp_Z1_array_s_q0)
);

exp_generic_doublcud #(
    .DataWidth( 26 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_f_Z3_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_f_Z3_array_V_address0),
    .ce0(table_f_Z3_array_V_ce0),
    .q0(table_f_Z3_array_V_q0),
    .address1(table_f_Z3_array_V_address1),
    .ce1(table_f_Z3_array_V_ce1),
    .q1(table_f_Z3_array_V_q1)
);

exp_generic_doubldEe #(
    .DataWidth( 42 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
table_f_Z2_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(table_f_Z2_array_V_address0),
    .ce0(table_f_Z2_array_V_ce0),
    .q0(table_f_Z2_array_V_q0)
);

myip_v1_0_HLS_maceOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
myip_v1_0_HLS_maceOg_U1(
    .din0(grp_fu_1138_p0),
    .din1(m_fix_hi_V_fu_449_p4),
    .din2(rhs_V_fu_471_p3),
    .dout(grp_fu_1138_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Z2_V_reg_1202 <= {{ret_V_3_fu_592_p2[50:43]}};
        Z3_V_reg_1209 <= {{ret_V_3_fu_592_p2[42:35]}};
        Z4_V_reg_1215 <= Z4_V_fu_628_p1;
        Z4_ind_V_reg_1220 <= {{ret_V_3_fu_592_p2[34:27]}};
        and_ln18_reg_1161 <= and_ln18_fu_311_p2;
        and_ln18_reg_1161_pp0_iter1_reg <= and_ln18_reg_1161;
        and_ln209_reg_1154 <= and_ln209_fu_299_p2;
        and_ln209_reg_1154_pp0_iter1_reg <= and_ln209_reg_1154;
        icmp_ln338_1_reg_1192 <= icmp_ln338_1_fu_552_p2;
        icmp_ln338_1_reg_1192_pp0_iter1_reg <= icmp_ln338_1_reg_1192;
        icmp_ln338_reg_1184 <= icmp_ln338_fu_530_p2;
        icmp_ln338_reg_1184_pp0_iter1_reg <= icmp_ln338_reg_1184;
        m_diff_hi_V_reg_1197 <= {{ret_V_3_fu_592_p2[58:51]}};
        p_Result_22_reg_1149 <= p_Val2_s_fu_261_p1[32'd63];
        p_Result_22_reg_1149_pp0_iter1_reg <= p_Result_22_reg_1149;
        r_V_13_reg_1172 <= r_V_13_fu_415_p3;
        r_exp_V_3_reg_1177 <= r_exp_V_3_fu_522_p3;
        r_exp_V_3_reg_1177_pp0_iter1_reg <= r_exp_V_3_reg_1177;
        select_ln253_reg_1167 <= select_ln253_fu_341_p3;
        select_ln253_reg_1167_pp0_iter1_reg <= select_ln253_reg_1167;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Z2_V_reg_1202_pp0_iter2_reg <= Z2_V_reg_1202;
        Z2_V_reg_1202_pp0_iter3_reg <= Z2_V_reg_1202_pp0_iter2_reg;
        Z3_V_reg_1209_pp0_iter2_reg <= Z3_V_reg_1209;
        Z4_V_reg_1215_pp0_iter2_reg <= Z4_V_reg_1215;
        add_ln657_reg_1245 <= add_ln657_fu_714_p2;
        and_ln18_reg_1161_pp0_iter2_reg <= and_ln18_reg_1161_pp0_iter1_reg;
        and_ln18_reg_1161_pp0_iter3_reg <= and_ln18_reg_1161_pp0_iter2_reg;
        and_ln18_reg_1161_pp0_iter4_reg <= and_ln18_reg_1161_pp0_iter3_reg;
        and_ln18_reg_1161_pp0_iter5_reg <= and_ln18_reg_1161_pp0_iter4_reg;
        and_ln209_reg_1154_pp0_iter2_reg <= and_ln209_reg_1154_pp0_iter1_reg;
        and_ln209_reg_1154_pp0_iter3_reg <= and_ln209_reg_1154_pp0_iter2_reg;
        and_ln209_reg_1154_pp0_iter4_reg <= and_ln209_reg_1154_pp0_iter3_reg;
        and_ln209_reg_1154_pp0_iter5_reg <= and_ln209_reg_1154_pp0_iter4_reg;
        exp_Z1P_m_1_V_reg_1260 <= {{exp_Z1P_m_1_l_V_fu_808_p2[51:2]}};
        exp_Z1_V_reg_1255 <= table_exp_Z1_array_s_q0;
        exp_Z1_hi_V_reg_1265 <= {{table_exp_Z1_array_s_q0[57:8]}};
        icmp_ln338_1_reg_1192_pp0_iter2_reg <= icmp_ln338_1_reg_1192_pp0_iter1_reg;
        icmp_ln338_1_reg_1192_pp0_iter3_reg <= icmp_ln338_1_reg_1192_pp0_iter2_reg;
        icmp_ln338_1_reg_1192_pp0_iter4_reg <= icmp_ln338_1_reg_1192_pp0_iter3_reg;
        icmp_ln338_reg_1184_pp0_iter2_reg <= icmp_ln338_reg_1184_pp0_iter1_reg;
        icmp_ln338_reg_1184_pp0_iter3_reg <= icmp_ln338_reg_1184_pp0_iter2_reg;
        icmp_ln338_reg_1184_pp0_iter4_reg <= icmp_ln338_reg_1184_pp0_iter3_reg;
        m_diff_hi_V_reg_1197_pp0_iter2_reg <= m_diff_hi_V_reg_1197;
        or_ln214_1_reg_1270 <= or_ln214_1_fu_834_p2;
        p_Result_22_reg_1149_pp0_iter2_reg <= p_Result_22_reg_1149_pp0_iter1_reg;
        p_Result_22_reg_1149_pp0_iter3_reg <= p_Result_22_reg_1149_pp0_iter2_reg;
        p_Result_22_reg_1149_pp0_iter4_reg <= p_Result_22_reg_1149_pp0_iter3_reg;
        p_Result_22_reg_1149_pp0_iter5_reg <= p_Result_22_reg_1149_pp0_iter4_reg;
        r_exp_V_3_reg_1177_pp0_iter2_reg <= r_exp_V_3_reg_1177_pp0_iter1_reg;
        r_exp_V_3_reg_1177_pp0_iter3_reg <= r_exp_V_3_reg_1177_pp0_iter2_reg;
        r_exp_V_3_reg_1177_pp0_iter4_reg <= r_exp_V_3_reg_1177_pp0_iter3_reg;
        sel_tmp16_reg_1280 <= sel_tmp16_fu_1089_p2;
        sel_tmp6_reg_1275[62 : 0] <= sel_tmp6_fu_1047_p3[62 : 0];
        select_ln253_reg_1167_pp0_iter2_reg <= select_ln253_reg_1167_pp0_iter1_reg;
        select_ln253_reg_1167_pp0_iter3_reg <= select_ln253_reg_1167_pp0_iter2_reg;
        select_ln253_reg_1167_pp0_iter4_reg <= select_ln253_reg_1167_pp0_iter3_reg;
        tmp_i_reg_1240[25 : 0] <= tmp_i_fu_677_p4[25 : 0];
tmp_i_reg_1240[42 : 35] <= tmp_i_fu_677_p4[42 : 35];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        table_exp_Z1_array_s_ce0 = 1'b1;
    end else begin
        table_exp_Z1_array_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        table_f_Z2_array_V_ce0 = 1'b1;
    end else begin
        table_f_Z2_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_f_Z3_array_V_ce0 = 1'b1;
    end else begin
        table_f_Z3_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        table_f_Z3_array_V_ce1 = 1'b1;
    end else begin
        table_f_Z3_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Z4_V_fu_628_p1 = ret_V_3_fu_592_p2[34:0];

assign add_ln1146_1_fu_893_p2 = (trunc_ln_fu_879_p3 + zext_ln1146_fu_871_p1);

assign add_ln657_2_fu_798_p2 = (zext_ln657_2_fu_794_p1 + exp_Z2P_m_1_V_fu_730_p2);

assign add_ln657_fu_714_p2 = (zext_ln657_fu_710_p1 + ret_V_4_fu_671_p2);

assign add_ln805_fu_508_p2 = (13'd1 + tmp_5_fu_483_p4);

assign and_ln18_fu_311_p2 = (icmp_ln833_fu_287_p2 & icmp_ln833_3_fu_305_p2);

assign and_ln209_fu_299_p2 = (icmp_ln837_fu_293_p2 & icmp_ln833_fu_287_p2);

assign and_ln338_1_fu_1061_p2 = (xor_ln338_1_fu_1055_p2 & icmp_ln338_reg_1184_pp0_iter4_reg);

assign and_ln338_fu_1019_p2 = (or_ln338_fu_935_p2 & icmp_ln338_reg_1184_pp0_iter4_reg);

assign and_ln849_fu_1029_p2 = (xor_ln338_fu_1024_p2 & icmp_ln849_fu_929_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((sel_tmp16_reg_1280[0:0] === 1'b1) ? 64'd0 : select_ln214_2_fu_1125_p3);

assign bitcast_ln512_fu_1009_p1 = p_Result_24_fu_999_p4;

assign e_frac_V_fu_335_p2 = (54'd0 - p_Result_s_fu_327_p3);

assign exp_Z1P_m_1_l_V_fu_808_p2 = (zext_ln682_fu_790_p1 + zext_ln657_3_fu_804_p1);

assign exp_Z2P_m_1_V_fu_730_p2 = (ret_V_5_fu_724_p1 + zext_ln657_1_fu_727_p1);

assign f_Z4_V_fu_654_p4 = {{table_f_Z3_array_V_q0[25:16]}};

assign grp_fu_1138_p0 = 31'd23637;

assign icmp_ln338_1_fu_552_p2 = ((shl_ln_fu_544_p3 != sext_ln682_fu_357_p1) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_530_p2 = (($signed(m_exp_fu_321_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln805_fu_502_p2 = ((trunc_ln805_fu_499_p1 == 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_3_fu_305_p2 = ((tmp_V_3_fu_283_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_287_p2 = ((tmp_V_fu_273_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln837_fu_293_p2 = ((tmp_V_3_fu_283_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln849_fu_929_p2 = (($signed(tmp_8_fu_919_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln853_fu_955_p2 = (($signed(r_exp_V_2_fu_912_p3) < $signed(13'd7170)) ? 1'b1 : 1'b0);

assign isNeg_fu_361_p3 = m_exp_fu_321_p2[32'd11];

assign lhs_V_1_fu_664_p1 = Z4_V_reg_1215_pp0_iter2_reg;

assign lhs_V_2_fu_779_p5 = {{{{Z2_V_reg_1202_pp0_iter3_reg}, {1'd0}}, {tmp_1_fu_736_p4}}, {2'd0}};

assign lhs_V_3_fu_838_p1 = exp_Z1_V_reg_1255;

assign lhs_V_4_fu_859_p3 = {{ret_V_6_fu_841_p2}, {49'd0}};

assign lhs_V_fu_567_p1 = r_V_13_reg_1172;

assign lshr_ln662_6_fu_746_p4 = {{{Z2_V_reg_1202_pp0_iter3_reg}, {1'd0}}, {tmp_1_fu_736_p4}};

assign m_exp_2_fu_379_p3 = ((isNeg_fu_361_p3[0:0] === 1'b1) ? sext_ln1311_fu_375_p1 : m_exp_fu_321_p2);

assign m_exp_fu_321_p2 = ($signed(12'd3073) + $signed(zext_ln502_fu_317_p1));

assign m_fix_hi_V_fu_449_p4 = {{r_V_13_fu_415_p3[70:55]}};

assign m_fix_l_V_fu_423_p4 = {{r_V_13_fu_415_p3[70:7]}};

assign m_frac_l_V_fu_349_p3 = {{select_ln253_fu_341_p3}, {7'd0}};

assign or_ln214_1_fu_834_p2 = (and_ln209_reg_1154_pp0_iter4_reg | and_ln18_reg_1161_pp0_iter4_reg);

assign or_ln214_fu_1105_p2 = (x_is_pinf_fu_1100_p2 | and_ln209_reg_1154_pp0_iter5_reg);

assign or_ln338_fu_935_p2 = (icmp_ln849_fu_929_p2 | icmp_ln338_1_reg_1192_pp0_iter4_reg);

assign or_ln849_1_fu_1066_p2 = (icmp_ln849_fu_929_p2 | icmp_ln338_reg_1184_pp0_iter4_reg);

assign or_ln849_2_fu_1077_p2 = (xor_ln849_fu_1071_p2 | and_ln338_1_fu_1061_p2);

assign or_ln849_fu_1035_p2 = (and_ln849_fu_1029_p2 | and_ln338_fu_1019_p2);

assign out_exp_V_fu_993_p2 = (11'd1023 + trunc_ln168_fu_989_p1);

assign p_Result_15_fu_492_p3 = grp_fu_1138_p3[32'd30];

assign p_Result_22_fu_265_p3 = p_Val2_s_fu_261_p1[32'd63];

assign p_Result_23_fu_459_p3 = r_V_13_fu_415_p3[32'd70];

assign p_Result_24_fu_999_p4 = {{{{1'd0}, {out_exp_V_fu_993_p2}}}, {tmp_V_4_fu_981_p3}};

assign p_Result_s_fu_327_p3 = {{2'd1}, {tmp_V_3_fu_283_p1}};

assign p_Val2_s_fu_261_p1 = x;

assign r_V_13_fu_415_p3 = ((isNeg_fu_361_p3[0:0] === 1'b1) ? sext_ln1287_fu_405_p1 : r_V_1_fu_409_p2);

assign r_V_15_fu_561_p1 = r_exp_V_3_reg_1177;

assign r_V_15_fu_561_p2 = ($signed({{1'b0}, {84'd1636647506585939924452}}) * $signed(r_V_15_fu_561_p1));

assign r_V_16_fu_694_p0 = r_V_16_fu_694_p00;

assign r_V_16_fu_694_p00 = ret_V_4_fu_671_p2;

assign r_V_16_fu_694_p1 = r_V_16_fu_694_p10;

assign r_V_16_fu_694_p10 = tmp_i_fu_677_p4;

assign r_V_16_fu_694_p2 = (r_V_16_fu_694_p0 * r_V_16_fu_694_p1);

assign r_V_17_fu_763_p0 = r_V_17_fu_763_p00;

assign r_V_17_fu_763_p00 = exp_Z2P_m_1_V_fu_730_p2;

assign r_V_17_fu_763_p1 = r_V_17_fu_763_p10;

assign r_V_17_fu_763_p10 = lshr_ln662_6_fu_746_p4;

assign r_V_17_fu_763_p2 = (r_V_17_fu_763_p0 * r_V_17_fu_763_p1);

assign r_V_18_fu_853_p0 = r_V_18_fu_853_p00;

assign r_V_18_fu_853_p00 = exp_Z1P_m_1_V_reg_1260;

assign r_V_18_fu_853_p1 = r_V_18_fu_853_p10;

assign r_V_18_fu_853_p10 = exp_Z1_hi_V_reg_1265;

assign r_V_18_fu_853_p2 = (r_V_18_fu_853_p0 * r_V_18_fu_853_p1);

assign r_V_1_fu_409_p2 = sext_ln682_fu_357_p1 << zext_ln1287_fu_391_p1;

assign r_V_3_fu_437_p2 = m_fix_l_V_fu_423_p4 << zext_ln1253_fu_433_p1;

assign r_V_4_fu_443_p2 = $signed(m_fix_l_V_fu_423_p4) >>> zext_ln1253_fu_433_p1;

assign r_V_fu_399_p2 = $signed(m_frac_l_V_fu_349_p3) >>> zext_ln1285_fu_395_p1;

assign r_exp_V_2_fu_912_p3 = ((tmp_7_fu_899_p3[0:0] === 1'b1) ? r_exp_V_3_reg_1177_pp0_iter4_reg : r_exp_V_fu_907_p2);

assign r_exp_V_3_fu_522_p3 = ((p_Result_15_fu_492_p3[0:0] === 1'b1) ? select_ln805_fu_514_p3 : tmp_5_fu_483_p4);

assign r_exp_V_fu_907_p2 = ($signed(13'd8191) + $signed(r_exp_V_3_reg_1177_pp0_iter4_reg));

assign ret_V_3_fu_592_p2 = ($signed(lhs_V_fu_567_p1) - $signed(sext_ln682_2_fu_588_p1));

assign ret_V_4_fu_671_p2 = (rhs_V_2_fu_667_p1 + lhs_V_1_fu_664_p1);

assign ret_V_5_fu_724_p1 = tmp_i_reg_1240;

assign ret_V_6_fu_841_p2 = (59'd16 + lhs_V_3_fu_838_p1);

assign ret_V_7_fu_887_p2 = (zext_ln657_5_fu_867_p1 + lhs_V_4_fu_859_p3);

assign rhs_V_1_fu_580_p3 = {{tmp_9_fu_570_p4}, {1'd0}};

assign rhs_V_2_fu_667_p1 = f_Z4_V_fu_654_p4;

assign rhs_V_fu_471_p3 = {{p_Result_23_fu_459_p3}, {18'd131072}};

assign sel_tmp16_fu_1089_p2 = (tmp19_fu_1083_p2 & icmp_ln853_fu_955_p2);

assign sel_tmp5_fu_1041_p2 = (xor_ln214_fu_1013_p2 & or_ln849_fu_1035_p2);

assign sel_tmp6_fu_1047_p3 = ((sel_tmp5_fu_1041_p2[0:0] === 1'b1) ? select_ln339_fu_947_p3 : bitcast_ln512_fu_1009_p1);

assign select_ln1322_fu_536_p3 = ((isNeg_fu_361_p3[0:0] === 1'b1) ? r_V_3_fu_437_p2 : r_V_4_fu_443_p2);

assign select_ln214_1_fu_1117_p3 = ((or_ln214_fu_1105_p2[0:0] === 1'b1) ? select_ln214_fu_1110_p3 : 64'd0);

assign select_ln214_2_fu_1125_p3 = ((or_ln214_1_reg_1270[0:0] === 1'b1) ? select_ln214_1_fu_1117_p3 : sel_tmp6_reg_1275);

assign select_ln214_fu_1110_p3 = ((and_ln209_reg_1154_pp0_iter5_reg[0:0] === 1'b1) ? 64'd9223372036854775807 : 64'd9218868437227405312);

assign select_ln253_fu_341_p3 = ((p_Result_22_fu_265_p3[0:0] === 1'b1) ? e_frac_V_fu_335_p2 : p_Result_s_fu_327_p3);

assign select_ln339_fu_947_p3 = ((tmp_10_fu_940_p3[0:0] === 1'b1) ? 64'd0 : 64'd9218868437227405312);

assign select_ln805_fu_514_p3 = ((icmp_ln805_fu_502_p2[0:0] === 1'b1) ? tmp_5_fu_483_p4 : add_ln805_fu_508_p2);

assign sext_ln1287_fu_405_p1 = $signed(r_V_fu_399_p2);

assign sext_ln1311_1_fu_387_p1 = $signed(m_exp_2_fu_379_p3);

assign sext_ln1311_fu_375_p1 = $signed(sub_ln1311_fu_369_p2);

assign sext_ln682_2_fu_588_p1 = $signed(rhs_V_1_fu_580_p3);

assign sext_ln682_fu_357_p1 = m_frac_l_V_fu_349_p3;

assign shl_ln_fu_544_p3 = {{select_ln1322_fu_536_p3}, {7'd0}};

assign sub_ln1311_fu_369_p2 = (11'd1023 - tmp_V_fu_273_p4);

assign table_exp_Z1_array_s_address0 = zext_ln498_fu_650_p1;

assign table_f_Z2_array_V_address0 = zext_ln498_3_fu_720_p1;

assign table_f_Z3_array_V_address0 = zext_ln498_1_fu_642_p1;

assign table_f_Z3_array_V_address1 = zext_ln498_2_fu_646_p1;

assign tmp19_fu_1083_p2 = (xor_ln214_fu_1013_p2 & or_ln849_2_fu_1077_p2);

assign tmp_10_fu_940_p3 = select_ln253_reg_1167_pp0_iter4_reg[32'd53];

assign tmp_1_fu_736_p4 = {{table_f_Z2_array_V_q0[41:2]}};

assign tmp_2_fu_769_p4 = {{r_V_17_fu_763_p2[92:57]}};

assign tmp_5_fu_483_p4 = {{grp_fu_1138_p3[30:18]}};

assign tmp_6_fu_971_p4 = {{ret_V_7_fu_887_p2[104:53]}};

assign tmp_7_fu_899_p3 = add_ln1146_1_fu_893_p2[32'd106];

assign tmp_8_fu_919_p4 = {{r_exp_V_2_fu_912_p3[12:10]}};

assign tmp_9_fu_570_p4 = {{r_V_15_fu_561_p2[83:13]}};

assign tmp_V_3_fu_283_p1 = p_Val2_s_fu_261_p1[51:0];

assign tmp_V_4_fu_981_p3 = ((tmp_7_fu_899_p3[0:0] === 1'b1) ? tmp_fu_961_p4 : tmp_6_fu_971_p4);

assign tmp_V_fu_273_p4 = {{p_Val2_s_fu_261_p1[62:52]}};

assign tmp_fu_961_p4 = {{ret_V_7_fu_887_p2[105:54]}};

assign tmp_i_fu_677_p4 = {{{Z3_V_reg_1209_pp0_iter2_reg}, {9'd0}}, {table_f_Z3_array_V_q1}};

assign tmp_s_fu_700_p4 = {{r_V_16_fu_694_p2[78:59]}};

assign trunc_ln1146_fu_875_p1 = ret_V_6_fu_841_p2[57:0];

assign trunc_ln168_fu_989_p1 = r_exp_V_2_fu_912_p3[10:0];

assign trunc_ln805_fu_499_p1 = grp_fu_1138_p3[17:0];

assign trunc_ln_fu_879_p3 = {{trunc_ln1146_fu_875_p1}, {49'd0}};

assign x_is_pinf_fu_1100_p2 = (xor_ln936_fu_1095_p2 & and_ln18_reg_1161_pp0_iter5_reg);

assign xor_ln214_fu_1013_p2 = (or_ln214_1_fu_834_p2 ^ 1'd1);

assign xor_ln338_1_fu_1055_p2 = (or_ln338_fu_935_p2 ^ 1'd1);

assign xor_ln338_fu_1024_p2 = (icmp_ln338_reg_1184_pp0_iter4_reg ^ 1'd1);

assign xor_ln849_fu_1071_p2 = (or_ln849_1_fu_1066_p2 ^ 1'd1);

assign xor_ln936_fu_1095_p2 = (p_Result_22_reg_1149_pp0_iter5_reg ^ 1'd1);

assign zext_ln1146_fu_871_p1 = r_V_18_fu_853_p2;

assign zext_ln1253_fu_433_p1 = $unsigned(sext_ln1311_1_fu_387_p1);

assign zext_ln1285_fu_395_p1 = $unsigned(sext_ln1311_1_fu_387_p1);

assign zext_ln1287_fu_391_p1 = $unsigned(sext_ln1311_1_fu_387_p1);

assign zext_ln498_1_fu_642_p1 = Z4_ind_V_reg_1220;

assign zext_ln498_2_fu_646_p1 = Z3_V_reg_1209;

assign zext_ln498_3_fu_720_p1 = Z2_V_reg_1202_pp0_iter2_reg;

assign zext_ln498_fu_650_p1 = m_diff_hi_V_reg_1197_pp0_iter2_reg;

assign zext_ln502_fu_317_p1 = tmp_V_fu_273_p4;

assign zext_ln657_1_fu_727_p1 = add_ln657_reg_1245;

assign zext_ln657_2_fu_794_p1 = tmp_2_fu_769_p4;

assign zext_ln657_3_fu_804_p1 = add_ln657_2_fu_798_p2;

assign zext_ln657_5_fu_867_p1 = r_V_18_fu_853_p2;

assign zext_ln657_fu_710_p1 = tmp_s_fu_700_p4;

assign zext_ln682_fu_790_p1 = lhs_V_2_fu_779_p5;

always @ (posedge ap_clk) begin
    tmp_i_reg_1240[34:26] <= 9'b000000000;
    sel_tmp6_reg_1275[63] <= 1'b0;
end

endmodule //exp_generic_double_s
