// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myip_v1_0_HLS.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myip_v1_0_HLS::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myip_v1_0_HLS::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state1 = "1";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state2 = "10";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state3 = "100";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state4 = "1000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state5 = "10000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state6 = "100000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state7 = "1000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state8 = "10000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state9 = "100000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state10 = "1000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state11 = "10000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state12 = "100000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<39> myip_v1_0_HLS::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_1 = "1";
const sc_lv<1> myip_v1_0_HLS::ap_const_lv1_0 = "0";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_25 = "100101";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_26 = "100110";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_7 = "111";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_18 = "11000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_B = "1011";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_1C = "11100";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_10 = "10000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_21 = "100001";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_2 = "10";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_3 = "11";
const sc_lv<1> myip_v1_0_HLS::ap_const_lv1_1 = "1";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_4 = "100";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_C = "1100";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_13 = "10011";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_14 = "10100";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_15 = "10101";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_1D = "11101";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_24 = "100100";
const sc_lv<6> myip_v1_0_HLS::ap_const_lv6_0 = "000000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_12 = "10010";
const sc_lv<3> myip_v1_0_HLS::ap_const_lv3_0 = "000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_23 = "100011";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_8 = "1000";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_D = "1101";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_19 = "11001";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_1E = "11110";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_5 = "101";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_16 = "10110";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_11 = "10001";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_22 = "100010";
const sc_lv<6> myip_v1_0_HLS::ap_const_lv6_24 = "100100";
const sc_lv<6> myip_v1_0_HLS::ap_const_lv6_1 = "1";
const sc_lv<3> myip_v1_0_HLS::ap_const_lv3_5 = "101";
const sc_lv<3> myip_v1_0_HLS::ap_const_lv3_1 = "1";
const sc_lv<2> myip_v1_0_HLS::ap_const_lv2_0 = "00";
const sc_lv<32> myip_v1_0_HLS::ap_const_lv32_17 = "10111";
const sc_lv<8> myip_v1_0_HLS::ap_const_lv8_FF = "11111111";
const sc_lv<23> myip_v1_0_HLS::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<3> myip_v1_0_HLS::ap_const_lv3_6 = "110";
const sc_lv<5> myip_v1_0_HLS::ap_const_lv5_1 = "1";
const bool myip_v1_0_HLS::ap_const_boolean_1 = true;

myip_v1_0_HLS::myip_v1_0_HLS(sc_module_name name) : sc_module(name), mVcdFile(0) {
    weights1_U = new myip_v1_0_HLS_weibkb("weights1_U");
    weights1_U->clk(ap_clk);
    weights1_U->reset(ap_rst_n_inv);
    weights1_U->address0(weights1_address0);
    weights1_U->ce0(weights1_ce0);
    weights1_U->q0(weights1_q0);
    bias1_U = new myip_v1_0_HLS_bias1("bias1_U");
    bias1_U->clk(ap_clk);
    bias1_U->reset(ap_rst_n_inv);
    bias1_U->address0(bias1_address0);
    bias1_U->ce0(bias1_ce0);
    bias1_U->q0(bias1_q0);
    weights2_U = new myip_v1_0_HLS_weicud("weights2_U");
    weights2_U->clk(ap_clk);
    weights2_U->reset(ap_rst_n_inv);
    weights2_U->address0(weights2_address0);
    weights2_U->ce0(weights2_ce0);
    weights2_U->q0(weights2_q0);
    bias2_U = new myip_v1_0_HLS_bias2("bias2_U");
    bias2_U->clk(ap_clk);
    bias2_U->reset(ap_rst_n_inv);
    bias2_U->address0(bias2_address0);
    bias2_U->ce0(bias2_ce0);
    bias2_U->q0(bias2_q0);
    v_U = new myip_v1_0_HLS_v("v_U");
    v_U->clk(ap_clk);
    v_U->reset(ap_rst_n_inv);
    v_U->address0(v_address0);
    v_U->ce0(v_ce0);
    v_U->we0(v_we0);
    v_U->d0(v_d0);
    v_U->q0(v_q0);
    v2_U = new myip_v1_0_HLS_v2("v2_U");
    v2_U->clk(ap_clk);
    v2_U->reset(ap_rst_n_inv);
    v2_U->address0(v2_address0);
    v2_U->ce0(v2_ce0);
    v2_U->we0(v2_we0);
    v2_U->d0(v2_d0);
    v2_U->q0(v2_q0);
    input_U = new myip_v1_0_HLS_input("input_U");
    input_U->clk(ap_clk);
    input_U->reset(ap_rst_n_inv);
    input_U->address0(input_address0);
    input_U->ce0(input_ce0);
    input_U->we0(input_we0);
    input_U->d0(S_AXIS_TDATA_int);
    input_U->q0(input_q0);
    myip_v1_0_HLS_faddEe_U1 = new myip_v1_0_HLS_faddEe<1,4,32,32,32>("myip_v1_0_HLS_faddEe_U1");
    myip_v1_0_HLS_faddEe_U1->clk(ap_clk);
    myip_v1_0_HLS_faddEe_U1->reset(ap_rst_n_inv);
    myip_v1_0_HLS_faddEe_U1->din0(grp_fu_332_p0);
    myip_v1_0_HLS_faddEe_U1->din1(grp_fu_332_p1);
    myip_v1_0_HLS_faddEe_U1->ce(ap_var_for_const0);
    myip_v1_0_HLS_faddEe_U1->dout(grp_fu_332_p2);
    myip_v1_0_HLS_fmueOg_U2 = new myip_v1_0_HLS_fmueOg<1,3,32,32,32>("myip_v1_0_HLS_fmueOg_U2");
    myip_v1_0_HLS_fmueOg_U2->clk(ap_clk);
    myip_v1_0_HLS_fmueOg_U2->reset(ap_rst_n_inv);
    myip_v1_0_HLS_fmueOg_U2->din0(grp_fu_338_p0);
    myip_v1_0_HLS_fmueOg_U2->din1(grp_fu_338_p1);
    myip_v1_0_HLS_fmueOg_U2->ce(ap_var_for_const0);
    myip_v1_0_HLS_fmueOg_U2->dout(grp_fu_338_p2);
    myip_v1_0_HLS_fcmfYi_U3 = new myip_v1_0_HLS_fcmfYi<1,2,32,32,1>("myip_v1_0_HLS_fcmfYi_U3");
    myip_v1_0_HLS_fcmfYi_U3->clk(ap_clk);
    myip_v1_0_HLS_fcmfYi_U3->reset(ap_rst_n_inv);
    myip_v1_0_HLS_fcmfYi_U3->din0(reg_358);
    myip_v1_0_HLS_fcmfYi_U3->din1(ap_var_for_const1);
    myip_v1_0_HLS_fcmfYi_U3->ce(ap_var_for_const0);
    myip_v1_0_HLS_fcmfYi_U3->opcode(ap_var_for_const2);
    myip_v1_0_HLS_fcmfYi_U3->dout(grp_fu_342_p2);
    regslice_both_S_AXIS_V_data_U = new regslice_both<32>("regslice_both_S_AXIS_V_data_U");
    regslice_both_S_AXIS_V_data_U->ap_clk(ap_clk);
    regslice_both_S_AXIS_V_data_U->ap_rst(ap_rst_n_inv);
    regslice_both_S_AXIS_V_data_U->data_in(S_AXIS_TDATA);
    regslice_both_S_AXIS_V_data_U->vld_in(S_AXIS_TVALID);
    regslice_both_S_AXIS_V_data_U->ack_in(regslice_both_S_AXIS_V_data_U_ack_in);
    regslice_both_S_AXIS_V_data_U->data_out(S_AXIS_TDATA_int);
    regslice_both_S_AXIS_V_data_U->vld_out(S_AXIS_TVALID_int);
    regslice_both_S_AXIS_V_data_U->ack_out(S_AXIS_TREADY_int);
    regslice_both_S_AXIS_V_data_U->apdone_blk(regslice_both_S_AXIS_V_data_U_apdone_blk);
    regslice_both_w1_S_AXIS_V_last_U = new regslice_both_w1<1>("regslice_both_w1_S_AXIS_V_last_U");
    regslice_both_w1_S_AXIS_V_last_U->ap_clk(ap_clk);
    regslice_both_w1_S_AXIS_V_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_S_AXIS_V_last_U->data_in(S_AXIS_TLAST);
    regslice_both_w1_S_AXIS_V_last_U->vld_in(S_AXIS_TVALID);
    regslice_both_w1_S_AXIS_V_last_U->ack_in(regslice_both_w1_S_AXIS_V_last_U_ack_in);
    regslice_both_w1_S_AXIS_V_last_U->data_out(S_AXIS_TLAST_int);
    regslice_both_w1_S_AXIS_V_last_U->vld_out(regslice_both_w1_S_AXIS_V_last_U_vld_out);
    regslice_both_w1_S_AXIS_V_last_U->ack_out(S_AXIS_TREADY_int);
    regslice_both_w1_S_AXIS_V_last_U->apdone_blk(regslice_both_w1_S_AXIS_V_last_U_apdone_blk);
    regslice_both_M_AXIS_V_data_U = new regslice_both<32>("regslice_both_M_AXIS_V_data_U");
    regslice_both_M_AXIS_V_data_U->ap_clk(ap_clk);
    regslice_both_M_AXIS_V_data_U->ap_rst(ap_rst_n_inv);
    regslice_both_M_AXIS_V_data_U->data_in(v2_q0);
    regslice_both_M_AXIS_V_data_U->vld_in(M_AXIS_TVALID_int);
    regslice_both_M_AXIS_V_data_U->ack_in(M_AXIS_TREADY_int);
    regslice_both_M_AXIS_V_data_U->data_out(M_AXIS_TDATA);
    regslice_both_M_AXIS_V_data_U->vld_out(regslice_both_M_AXIS_V_data_U_vld_out);
    regslice_both_M_AXIS_V_data_U->ack_out(M_AXIS_TREADY);
    regslice_both_M_AXIS_V_data_U->apdone_blk(regslice_both_M_AXIS_V_data_U_apdone_blk);
    regslice_both_w1_M_AXIS_V_last_U = new regslice_both_w1<1>("regslice_both_w1_M_AXIS_V_last_U");
    regslice_both_w1_M_AXIS_V_last_U->ap_clk(ap_clk);
    regslice_both_w1_M_AXIS_V_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_M_AXIS_V_last_U->data_in(M_AXIS_TLAST_int);
    regslice_both_w1_M_AXIS_V_last_U->vld_in(M_AXIS_TVALID_int);
    regslice_both_w1_M_AXIS_V_last_U->ack_in(regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy);
    regslice_both_w1_M_AXIS_V_last_U->data_out(M_AXIS_TLAST);
    regslice_both_w1_M_AXIS_V_last_U->vld_out(regslice_both_w1_M_AXIS_V_last_U_vld_out);
    regslice_both_w1_M_AXIS_V_last_U->ack_out(M_AXIS_TREADY);
    regslice_both_w1_M_AXIS_V_last_U->apdone_blk(regslice_both_w1_M_AXIS_V_last_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_M_AXIS_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( M_AXIS_TREADY_int );

    SC_METHOD(thread_M_AXIS_TLAST_int);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( tmp_last_reg_787 );

    SC_METHOD(thread_M_AXIS_TVALID);
    sensitive << ( regslice_both_M_AXIS_V_data_U_vld_out );

    SC_METHOD(thread_M_AXIS_TVALID_int);
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( M_AXIS_TREADY_int );

    SC_METHOD(thread_S_AXIS_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_S_AXIS_TREADY);
    sensitive << ( S_AXIS_TVALID );
    sensitive << ( regslice_both_S_AXIS_V_data_U_ack_in );

    SC_METHOD(thread_S_AXIS_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_add_ln51_1_fu_444_p2);
    sensitive << ( zext_ln50_reg_674 );
    sensitive << ( add_ln51_fu_438_p2 );

    SC_METHOD(thread_add_ln51_fu_438_p2);
    sensitive << ( zext_ln51_2_fu_422_p1 );
    sensitive << ( zext_ln51_3_fu_434_p1 );

    SC_METHOD(thread_add_ln67_fu_568_p2);
    sensitive << ( zext_ln66_reg_731 );
    sensitive << ( sub_ln67_fu_562_p2 );

    SC_METHOD(thread_and_ln56_fu_490_p2);
    sensitive << ( or_ln56_fu_484_p2 );
    sensitive << ( grp_fu_342_p2 );

    SC_METHOD(thread_and_ln72_fu_614_p2);
    sensitive << ( grp_fu_342_p2 );
    sensitive << ( or_ln72_fu_608_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bias1_address0);
    sensitive << ( zext_ln51_reg_668 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_bias1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_bias2_address0);
    sensitive << ( zext_ln67_reg_725 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_bias2_ce0);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_bitcast_ln56_fu_454_p1);
    sensitive << ( reg_358 );

    SC_METHOD(thread_bitcast_ln72_fu_578_p1);
    sensitive << ( reg_358 );

    SC_METHOD(thread_grp_fu_332_p0);
    sensitive << ( sum_0_reg_264 );
    sensitive << ( sum2_0_reg_298 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_332_p1);
    sensitive << ( reg_347 );
    sensitive << ( bias1_load_reg_712 );
    sensitive << ( bias2_load_reg_769 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_338_p0);
    sensitive << ( weights1_load_reg_702 );
    sensitive << ( weights2_load_reg_759 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_grp_fu_338_p1);
    sensitive << ( input_load_reg_707 );
    sensitive << ( v_load_reg_764 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_i_fu_411_p2);
    sensitive << ( i_0_reg_276 );

    SC_METHOD(thread_icmp_ln43_fu_363_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( word_cnt_0_reg_242 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_icmp_ln48_fu_385_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( word_cnt_1_reg_253 );

    SC_METHOD(thread_icmp_ln50_fu_405_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_276 );

    SC_METHOD(thread_icmp_ln56_1_fu_478_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( trunc_ln56_fu_468_p1 );

    SC_METHOD(thread_icmp_ln56_fu_472_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_2_fu_458_p4 );

    SC_METHOD(thread_icmp_ln64_fu_505_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( word_cnt_2_reg_287 );

    SC_METHOD(thread_icmp_ln66_fu_525_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( x_0_reg_310 );

    SC_METHOD(thread_icmp_ln72_1_fu_602_p2);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( trunc_ln72_fu_592_p1 );

    SC_METHOD(thread_icmp_ln72_fu_596_p2);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( tmp_5_fu_582_p4 );

    SC_METHOD(thread_icmp_ln82_fu_629_p2);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( word_cnt_3_reg_321 );

    SC_METHOD(thread_input_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln45_fu_380_p1 );
    sensitive << ( zext_ln51_1_fu_417_p1 );

    SC_METHOD(thread_input_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_input_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_or_ln56_fu_484_p2);
    sensitive << ( icmp_ln56_1_fu_478_p2 );
    sensitive << ( icmp_ln56_fu_472_p2 );

    SC_METHOD(thread_or_ln72_fu_608_p2);
    sensitive << ( icmp_ln72_1_fu_602_p2 );
    sensitive << ( icmp_ln72_fu_596_p2 );

    SC_METHOD(thread_sext_ln67_fu_573_p1);
    sensitive << ( add_ln67_fu_568_p2 );

    SC_METHOD(thread_sub_ln67_fu_562_p2);
    sensitive << ( tmp_9_fu_542_p3 );
    sensitive << ( zext_ln67_2_fu_558_p1 );

    SC_METHOD(thread_tmp_2_fu_458_p4);
    sensitive << ( bitcast_ln56_fu_454_p1 );

    SC_METHOD(thread_tmp_5_fu_582_p4);
    sensitive << ( bitcast_ln72_fu_578_p1 );

    SC_METHOD(thread_tmp_7_fu_426_p3);
    sensitive << ( i_0_reg_276 );

    SC_METHOD(thread_tmp_9_fu_542_p3);
    sensitive << ( x_0_reg_310 );

    SC_METHOD(thread_tmp_last_fu_646_p2);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( icmp_ln82_fu_629_p2 );
    sensitive << ( word_cnt_3_reg_321 );

    SC_METHOD(thread_tmp_s_fu_550_p3);
    sensitive << ( x_0_reg_310 );

    SC_METHOD(thread_trunc_ln56_fu_468_p1);
    sensitive << ( bitcast_ln56_fu_454_p1 );

    SC_METHOD(thread_trunc_ln72_fu_592_p1);
    sensitive << ( bitcast_ln72_fu_578_p1 );

    SC_METHOD(thread_v2_address0);
    sensitive << ( zext_ln67_reg_725 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( zext_ln84_fu_641_p1 );

    SC_METHOD(thread_v2_ce0);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_v2_d0);
    sensitive << ( reg_358 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( and_ln72_fu_614_p2 );

    SC_METHOD(thread_v2_we0);
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_v_address0);
    sensitive << ( zext_ln51_reg_668 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln67_1_fu_537_p1 );

    SC_METHOD(thread_v_ce0);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_v_d0);
    sensitive << ( reg_358 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( and_ln56_fu_490_p2 );

    SC_METHOD(thread_v_we0);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_weights1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln51_4_fu_449_p1 );

    SC_METHOD(thread_weights1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_weights2_address0);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( sext_ln67_fu_573_p1 );

    SC_METHOD(thread_weights2_ce0);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_word_cnt_4_fu_391_p2);
    sensitive << ( word_cnt_1_reg_253 );

    SC_METHOD(thread_word_cnt_5_fu_635_p2);
    sensitive << ( word_cnt_3_reg_321 );

    SC_METHOD(thread_word_cnt_6_fu_511_p2);
    sensitive << ( word_cnt_2_reg_287 );

    SC_METHOD(thread_word_cnt_fu_369_p2);
    sensitive << ( word_cnt_0_reg_242 );

    SC_METHOD(thread_x_fu_531_p2);
    sensitive << ( x_0_reg_310 );

    SC_METHOD(thread_zext_ln45_fu_380_p1);
    sensitive << ( word_cnt_0_reg_242 );

    SC_METHOD(thread_zext_ln50_fu_401_p1);
    sensitive << ( word_cnt_1_reg_253 );

    SC_METHOD(thread_zext_ln51_1_fu_417_p1);
    sensitive << ( i_0_reg_276 );

    SC_METHOD(thread_zext_ln51_2_fu_422_p1);
    sensitive << ( i_0_reg_276 );

    SC_METHOD(thread_zext_ln51_3_fu_434_p1);
    sensitive << ( tmp_7_fu_426_p3 );

    SC_METHOD(thread_zext_ln51_4_fu_449_p1);
    sensitive << ( add_ln51_1_fu_444_p2 );

    SC_METHOD(thread_zext_ln51_fu_397_p1);
    sensitive << ( word_cnt_1_reg_253 );

    SC_METHOD(thread_zext_ln66_fu_521_p1);
    sensitive << ( word_cnt_2_reg_287 );

    SC_METHOD(thread_zext_ln67_1_fu_537_p1);
    sensitive << ( x_0_reg_310 );

    SC_METHOD(thread_zext_ln67_2_fu_558_p1);
    sensitive << ( tmp_s_fu_550_p3 );

    SC_METHOD(thread_zext_ln67_fu_517_p1);
    sensitive << ( word_cnt_2_reg_287 );

    SC_METHOD(thread_zext_ln84_fu_641_p1);
    sensitive << ( word_cnt_3_reg_321 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln43_fu_363_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln48_fu_385_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln50_fu_405_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln64_fu_505_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln66_fu_525_p2 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( icmp_ln82_fu_629_p2 );
    sensitive << ( S_AXIS_TVALID_int );
    sensitive << ( M_AXIS_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myip_v1_0_HLS_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, S_AXIS_TDATA, "(port)S_AXIS_TDATA");
    sc_trace(mVcdFile, S_AXIS_TVALID, "(port)S_AXIS_TVALID");
    sc_trace(mVcdFile, S_AXIS_TREADY, "(port)S_AXIS_TREADY");
    sc_trace(mVcdFile, S_AXIS_TLAST, "(port)S_AXIS_TLAST");
    sc_trace(mVcdFile, M_AXIS_TDATA, "(port)M_AXIS_TDATA");
    sc_trace(mVcdFile, M_AXIS_TVALID, "(port)M_AXIS_TVALID");
    sc_trace(mVcdFile, M_AXIS_TREADY, "(port)M_AXIS_TREADY");
    sc_trace(mVcdFile, M_AXIS_TLAST, "(port)M_AXIS_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, weights1_address0, "weights1_address0");
    sc_trace(mVcdFile, weights1_ce0, "weights1_ce0");
    sc_trace(mVcdFile, weights1_q0, "weights1_q0");
    sc_trace(mVcdFile, bias1_address0, "bias1_address0");
    sc_trace(mVcdFile, bias1_ce0, "bias1_ce0");
    sc_trace(mVcdFile, bias1_q0, "bias1_q0");
    sc_trace(mVcdFile, weights2_address0, "weights2_address0");
    sc_trace(mVcdFile, weights2_ce0, "weights2_ce0");
    sc_trace(mVcdFile, weights2_q0, "weights2_q0");
    sc_trace(mVcdFile, bias2_address0, "bias2_address0");
    sc_trace(mVcdFile, bias2_ce0, "bias2_ce0");
    sc_trace(mVcdFile, bias2_q0, "bias2_q0");
    sc_trace(mVcdFile, S_AXIS_TDATA_blk_n, "S_AXIS_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln43_fu_363_p2, "icmp_ln43_fu_363_p2");
    sc_trace(mVcdFile, M_AXIS_TDATA_blk_n, "M_AXIS_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_fu_338_p2, "grp_fu_338_p2");
    sc_trace(mVcdFile, reg_347, "reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_332_p2, "grp_fu_332_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, reg_358, "reg_358");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, word_cnt_fu_369_p2, "word_cnt_fu_369_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, word_cnt_4_fu_391_p2, "word_cnt_4_fu_391_p2");
    sc_trace(mVcdFile, word_cnt_4_reg_663, "word_cnt_4_reg_663");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln51_fu_397_p1, "zext_ln51_fu_397_p1");
    sc_trace(mVcdFile, zext_ln51_reg_668, "zext_ln51_reg_668");
    sc_trace(mVcdFile, icmp_ln48_fu_385_p2, "icmp_ln48_fu_385_p2");
    sc_trace(mVcdFile, zext_ln50_fu_401_p1, "zext_ln50_fu_401_p1");
    sc_trace(mVcdFile, zext_ln50_reg_674, "zext_ln50_reg_674");
    sc_trace(mVcdFile, i_fu_411_p2, "i_fu_411_p2");
    sc_trace(mVcdFile, i_reg_682, "i_reg_682");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln50_fu_405_p2, "icmp_ln50_fu_405_p2");
    sc_trace(mVcdFile, weights1_load_reg_702, "weights1_load_reg_702");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, input_q0, "input_q0");
    sc_trace(mVcdFile, input_load_reg_707, "input_load_reg_707");
    sc_trace(mVcdFile, bias1_load_reg_712, "bias1_load_reg_712");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, word_cnt_6_fu_511_p2, "word_cnt_6_fu_511_p2");
    sc_trace(mVcdFile, word_cnt_6_reg_720, "word_cnt_6_reg_720");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, zext_ln67_fu_517_p1, "zext_ln67_fu_517_p1");
    sc_trace(mVcdFile, zext_ln67_reg_725, "zext_ln67_reg_725");
    sc_trace(mVcdFile, icmp_ln64_fu_505_p2, "icmp_ln64_fu_505_p2");
    sc_trace(mVcdFile, zext_ln66_fu_521_p1, "zext_ln66_fu_521_p1");
    sc_trace(mVcdFile, zext_ln66_reg_731, "zext_ln66_reg_731");
    sc_trace(mVcdFile, x_fu_531_p2, "x_fu_531_p2");
    sc_trace(mVcdFile, x_reg_739, "x_reg_739");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, icmp_ln66_fu_525_p2, "icmp_ln66_fu_525_p2");
    sc_trace(mVcdFile, weights2_load_reg_759, "weights2_load_reg_759");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, v_q0, "v_q0");
    sc_trace(mVcdFile, v_load_reg_764, "v_load_reg_764");
    sc_trace(mVcdFile, bias2_load_reg_769, "bias2_load_reg_769");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, word_cnt_5_fu_635_p2, "word_cnt_5_fu_635_p2");
    sc_trace(mVcdFile, word_cnt_5_reg_777, "word_cnt_5_reg_777");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, regslice_both_M_AXIS_V_data_U_apdone_blk, "regslice_both_M_AXIS_V_data_U_apdone_blk");
    sc_trace(mVcdFile, icmp_ln82_fu_629_p2, "icmp_ln82_fu_629_p2");
    sc_trace(mVcdFile, tmp_last_fu_646_p2, "tmp_last_fu_646_p2");
    sc_trace(mVcdFile, tmp_last_reg_787, "tmp_last_reg_787");
    sc_trace(mVcdFile, v2_q0, "v2_q0");
    sc_trace(mVcdFile, v_address0, "v_address0");
    sc_trace(mVcdFile, v_ce0, "v_ce0");
    sc_trace(mVcdFile, v_we0, "v_we0");
    sc_trace(mVcdFile, v_d0, "v_d0");
    sc_trace(mVcdFile, v2_address0, "v2_address0");
    sc_trace(mVcdFile, v2_ce0, "v2_ce0");
    sc_trace(mVcdFile, v2_we0, "v2_we0");
    sc_trace(mVcdFile, v2_d0, "v2_d0");
    sc_trace(mVcdFile, input_address0, "input_address0");
    sc_trace(mVcdFile, input_ce0, "input_ce0");
    sc_trace(mVcdFile, input_we0, "input_we0");
    sc_trace(mVcdFile, word_cnt_0_reg_242, "word_cnt_0_reg_242");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, word_cnt_1_reg_253, "word_cnt_1_reg_253");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, sum_0_reg_264, "sum_0_reg_264");
    sc_trace(mVcdFile, i_0_reg_276, "i_0_reg_276");
    sc_trace(mVcdFile, word_cnt_2_reg_287, "word_cnt_2_reg_287");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, sum2_0_reg_298, "sum2_0_reg_298");
    sc_trace(mVcdFile, x_0_reg_310, "x_0_reg_310");
    sc_trace(mVcdFile, word_cnt_3_reg_321, "word_cnt_3_reg_321");
    sc_trace(mVcdFile, zext_ln45_fu_380_p1, "zext_ln45_fu_380_p1");
    sc_trace(mVcdFile, zext_ln51_4_fu_449_p1, "zext_ln51_4_fu_449_p1");
    sc_trace(mVcdFile, zext_ln51_1_fu_417_p1, "zext_ln51_1_fu_417_p1");
    sc_trace(mVcdFile, sext_ln67_fu_573_p1, "sext_ln67_fu_573_p1");
    sc_trace(mVcdFile, zext_ln67_1_fu_537_p1, "zext_ln67_1_fu_537_p1");
    sc_trace(mVcdFile, zext_ln84_fu_641_p1, "zext_ln84_fu_641_p1");
    sc_trace(mVcdFile, grp_fu_332_p0, "grp_fu_332_p0");
    sc_trace(mVcdFile, grp_fu_332_p1, "grp_fu_332_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_338_p0, "grp_fu_338_p0");
    sc_trace(mVcdFile, grp_fu_338_p1, "grp_fu_338_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, tmp_7_fu_426_p3, "tmp_7_fu_426_p3");
    sc_trace(mVcdFile, zext_ln51_2_fu_422_p1, "zext_ln51_2_fu_422_p1");
    sc_trace(mVcdFile, zext_ln51_3_fu_434_p1, "zext_ln51_3_fu_434_p1");
    sc_trace(mVcdFile, add_ln51_fu_438_p2, "add_ln51_fu_438_p2");
    sc_trace(mVcdFile, add_ln51_1_fu_444_p2, "add_ln51_1_fu_444_p2");
    sc_trace(mVcdFile, bitcast_ln56_fu_454_p1, "bitcast_ln56_fu_454_p1");
    sc_trace(mVcdFile, tmp_2_fu_458_p4, "tmp_2_fu_458_p4");
    sc_trace(mVcdFile, trunc_ln56_fu_468_p1, "trunc_ln56_fu_468_p1");
    sc_trace(mVcdFile, icmp_ln56_1_fu_478_p2, "icmp_ln56_1_fu_478_p2");
    sc_trace(mVcdFile, icmp_ln56_fu_472_p2, "icmp_ln56_fu_472_p2");
    sc_trace(mVcdFile, or_ln56_fu_484_p2, "or_ln56_fu_484_p2");
    sc_trace(mVcdFile, grp_fu_342_p2, "grp_fu_342_p2");
    sc_trace(mVcdFile, and_ln56_fu_490_p2, "and_ln56_fu_490_p2");
    sc_trace(mVcdFile, tmp_s_fu_550_p3, "tmp_s_fu_550_p3");
    sc_trace(mVcdFile, tmp_9_fu_542_p3, "tmp_9_fu_542_p3");
    sc_trace(mVcdFile, zext_ln67_2_fu_558_p1, "zext_ln67_2_fu_558_p1");
    sc_trace(mVcdFile, sub_ln67_fu_562_p2, "sub_ln67_fu_562_p2");
    sc_trace(mVcdFile, add_ln67_fu_568_p2, "add_ln67_fu_568_p2");
    sc_trace(mVcdFile, bitcast_ln72_fu_578_p1, "bitcast_ln72_fu_578_p1");
    sc_trace(mVcdFile, tmp_5_fu_582_p4, "tmp_5_fu_582_p4");
    sc_trace(mVcdFile, trunc_ln72_fu_592_p1, "trunc_ln72_fu_592_p1");
    sc_trace(mVcdFile, icmp_ln72_1_fu_602_p2, "icmp_ln72_1_fu_602_p2");
    sc_trace(mVcdFile, icmp_ln72_fu_596_p2, "icmp_ln72_fu_596_p2");
    sc_trace(mVcdFile, or_ln72_fu_608_p2, "or_ln72_fu_608_p2");
    sc_trace(mVcdFile, and_ln72_fu_614_p2, "and_ln72_fu_614_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_S_AXIS_V_data_U_apdone_blk, "regslice_both_S_AXIS_V_data_U_apdone_blk");
    sc_trace(mVcdFile, S_AXIS_TDATA_int, "S_AXIS_TDATA_int");
    sc_trace(mVcdFile, S_AXIS_TVALID_int, "S_AXIS_TVALID_int");
    sc_trace(mVcdFile, S_AXIS_TREADY_int, "S_AXIS_TREADY_int");
    sc_trace(mVcdFile, regslice_both_S_AXIS_V_data_U_ack_in, "regslice_both_S_AXIS_V_data_U_ack_in");
    sc_trace(mVcdFile, regslice_both_w1_S_AXIS_V_last_U_apdone_blk, "regslice_both_w1_S_AXIS_V_last_U_apdone_blk");
    sc_trace(mVcdFile, S_AXIS_TLAST_int, "S_AXIS_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_S_AXIS_V_last_U_vld_out, "regslice_both_w1_S_AXIS_V_last_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_S_AXIS_V_last_U_ack_in, "regslice_both_w1_S_AXIS_V_last_U_ack_in");
    sc_trace(mVcdFile, M_AXIS_TVALID_int, "M_AXIS_TVALID_int");
    sc_trace(mVcdFile, M_AXIS_TREADY_int, "M_AXIS_TREADY_int");
    sc_trace(mVcdFile, regslice_both_M_AXIS_V_data_U_vld_out, "regslice_both_M_AXIS_V_data_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_M_AXIS_V_last_U_apdone_blk, "regslice_both_w1_M_AXIS_V_last_U_apdone_blk");
    sc_trace(mVcdFile, M_AXIS_TLAST_int, "M_AXIS_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy, "regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_w1_M_AXIS_V_last_U_vld_out, "regslice_both_w1_M_AXIS_V_last_U_vld_out");
#endif

    }
    mHdltvinHandle.open("myip_v1_0_HLS.hdltvin.dat");
    mHdltvoutHandle.open("myip_v1_0_HLS.hdltvout.dat");
}

myip_v1_0_HLS::~myip_v1_0_HLS() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete weights1_U;
    delete bias1_U;
    delete weights2_U;
    delete bias2_U;
    delete v_U;
    delete v2_U;
    delete input_U;
    delete myip_v1_0_HLS_faddEe_U1;
    delete myip_v1_0_HLS_fmueOg_U2;
    delete myip_v1_0_HLS_fcmfYi_U3;
    delete regslice_both_S_AXIS_V_data_U;
    delete regslice_both_w1_S_AXIS_V_last_U;
    delete regslice_both_M_AXIS_V_data_U;
    delete regslice_both_w1_M_AXIS_V_last_U;
}

void myip_v1_0_HLS::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void myip_v1_0_HLS::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void myip_v1_0_HLS::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_1;
}

void myip_v1_0_HLS::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_0_reg_276 = i_reg_682.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln48_fu_385_p2.read()))) {
        i_0_reg_276 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        sum2_0_reg_298 = grp_fu_332_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln64_fu_505_p2.read()))) {
        sum2_0_reg_298 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sum_0_reg_264 = grp_fu_332_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln48_fu_385_p2.read()))) {
        sum_0_reg_264 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        word_cnt_0_reg_242 = word_cnt_fu_369_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        word_cnt_0_reg_242 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        word_cnt_1_reg_253 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        word_cnt_1_reg_253 = word_cnt_4_reg_663.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln48_fu_385_p2.read(), ap_const_lv1_1))) {
        word_cnt_2_reg_287 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        word_cnt_2_reg_287 = word_cnt_6_reg_720.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln64_fu_505_p2.read()))) {
        word_cnt_3_reg_321 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                esl_seteq<1,1,1>(M_AXIS_TREADY_int.read(), ap_const_logic_1))) {
        word_cnt_3_reg_321 = word_cnt_5_reg_777.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        x_0_reg_310 = x_reg_739.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln64_fu_505_p2.read()))) {
        x_0_reg_310 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        bias1_load_reg_712 = bias1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        bias2_load_reg_769 = bias2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_682 = i_fu_411_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_load_reg_707 = input_q0.read();
        weights1_load_reg_702 = weights1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_347 = grp_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        reg_358 = grp_fu_332_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(regslice_both_M_AXIS_V_data_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln82_fu_629_p2.read()))) {
        tmp_last_reg_787 = tmp_last_fu_646_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        v_load_reg_764 = v_q0.read();
        weights2_load_reg_759 = weights2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        word_cnt_4_reg_663 = word_cnt_4_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(regslice_both_M_AXIS_V_data_U_apdone_blk.read(), ap_const_logic_0))) {
        word_cnt_5_reg_777 = word_cnt_5_fu_635_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        word_cnt_6_reg_720 = word_cnt_6_fu_511_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        x_reg_739 = x_fu_531_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln48_fu_385_p2.read()))) {
        zext_ln50_reg_674 = zext_ln50_fu_401_p1.read();
        zext_ln51_reg_668 = zext_ln51_fu_397_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln64_fu_505_p2.read()))) {
        zext_ln66_reg_731 = zext_ln66_fu_521_p1.read();
        zext_ln67_reg_725 = zext_ln67_fu_517_p1.read();
    }
}

void myip_v1_0_HLS::thread_M_AXIS_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        M_AXIS_TDATA_blk_n = M_AXIS_TREADY_int.read();
    } else {
        M_AXIS_TDATA_blk_n = ap_const_logic_1;
    }
}

void myip_v1_0_HLS::thread_M_AXIS_TLAST_int() {
    M_AXIS_TLAST_int =  (sc_logic) (tmp_last_reg_787.read()[0]);
}

void myip_v1_0_HLS::thread_M_AXIS_TVALID() {
    M_AXIS_TVALID = regslice_both_M_AXIS_V_data_U_vld_out.read();
}

void myip_v1_0_HLS::thread_M_AXIS_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         esl_seteq<1,1,1>(M_AXIS_TREADY_int.read(), ap_const_logic_1))) {
        M_AXIS_TVALID_int = ap_const_logic_1;
    } else {
        M_AXIS_TVALID_int = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_S_AXIS_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0))) {
        S_AXIS_TDATA_blk_n = S_AXIS_TVALID_int.read();
    } else {
        S_AXIS_TDATA_blk_n = ap_const_logic_1;
    }
}

void myip_v1_0_HLS::thread_S_AXIS_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_S_AXIS_V_data_U_ack_in.read()))) {
        S_AXIS_TREADY = ap_const_logic_1;
    } else {
        S_AXIS_TREADY = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_S_AXIS_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        S_AXIS_TREADY_int = ap_const_logic_1;
    } else {
        S_AXIS_TREADY_int = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_add_ln51_1_fu_444_p2() {
    add_ln51_1_fu_444_p2 = (!add_ln51_fu_438_p2.read().is_01() || !zext_ln50_reg_674.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln51_fu_438_p2.read()) + sc_biguint<9>(zext_ln50_reg_674.read()));
}

void myip_v1_0_HLS::thread_add_ln51_fu_438_p2() {
    add_ln51_fu_438_p2 = (!zext_ln51_2_fu_422_p1.read().is_01() || !zext_ln51_3_fu_434_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln51_2_fu_422_p1.read()) + sc_biguint<9>(zext_ln51_3_fu_434_p1.read()));
}

void myip_v1_0_HLS::thread_add_ln67_fu_568_p2() {
    add_ln67_fu_568_p2 = (!sub_ln67_fu_562_p2.read().is_01() || !zext_ln66_reg_731.read().is_01())? sc_lv<6>(): (sc_biguint<6>(sub_ln67_fu_562_p2.read()) + sc_biguint<6>(zext_ln66_reg_731.read()));
}

void myip_v1_0_HLS::thread_and_ln56_fu_490_p2() {
    and_ln56_fu_490_p2 = (or_ln56_fu_484_p2.read() & grp_fu_342_p2.read());
}

void myip_v1_0_HLS::thread_and_ln72_fu_614_p2() {
    and_ln72_fu_614_p2 = (or_ln72_fu_608_p2.read() & grp_fu_342_p2.read());
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void myip_v1_0_HLS::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void myip_v1_0_HLS::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read()));
}

void myip_v1_0_HLS::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void myip_v1_0_HLS::thread_bias1_address0() {
    bias1_address0 =  (sc_lv<3>) (zext_ln51_reg_668.read());
}

void myip_v1_0_HLS::thread_bias1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bias1_ce0 = ap_const_logic_1;
    } else {
        bias1_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_bias2_address0() {
    bias2_address0 =  (sc_lv<3>) (zext_ln67_reg_725.read());
}

void myip_v1_0_HLS::thread_bias2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        bias2_ce0 = ap_const_logic_1;
    } else {
        bias2_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_bitcast_ln56_fu_454_p1() {
    bitcast_ln56_fu_454_p1 = reg_358.read();
}

void myip_v1_0_HLS::thread_bitcast_ln72_fu_578_p1() {
    bitcast_ln72_fu_578_p1 = reg_358.read();
}

void myip_v1_0_HLS::thread_grp_fu_332_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        grp_fu_332_p0 = sum2_0_reg_298.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        grp_fu_332_p0 = sum_0_reg_264.read();
    } else {
        grp_fu_332_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myip_v1_0_HLS::thread_grp_fu_332_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_332_p1 = bias2_load_reg_769.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_332_p1 = bias1_load_reg_712.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_332_p1 = reg_347.read();
    } else {
        grp_fu_332_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myip_v1_0_HLS::thread_grp_fu_338_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_338_p0 = weights2_load_reg_759.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_338_p0 = weights1_load_reg_702.read();
    } else {
        grp_fu_338_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myip_v1_0_HLS::thread_grp_fu_338_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_338_p1 = v_load_reg_764.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_338_p1 = input_load_reg_707.read();
    } else {
        grp_fu_338_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void myip_v1_0_HLS::thread_i_fu_411_p2() {
    i_fu_411_p2 = (!i_0_reg_276.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_276.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void myip_v1_0_HLS::thread_icmp_ln43_fu_363_p2() {
    icmp_ln43_fu_363_p2 = (!word_cnt_0_reg_242.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(word_cnt_0_reg_242.read() == ap_const_lv6_24);
}

void myip_v1_0_HLS::thread_icmp_ln48_fu_385_p2() {
    icmp_ln48_fu_385_p2 = (!word_cnt_1_reg_253.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(word_cnt_1_reg_253.read() == ap_const_lv3_5);
}

void myip_v1_0_HLS::thread_icmp_ln50_fu_405_p2() {
    icmp_ln50_fu_405_p2 = (!i_0_reg_276.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_276.read() == ap_const_lv6_24);
}

void myip_v1_0_HLS::thread_icmp_ln56_1_fu_478_p2() {
    icmp_ln56_1_fu_478_p2 = (!trunc_ln56_fu_468_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln56_fu_468_p1.read() == ap_const_lv23_0);
}

void myip_v1_0_HLS::thread_icmp_ln56_fu_472_p2() {
    icmp_ln56_fu_472_p2 = (!tmp_2_fu_458_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_458_p4.read() != ap_const_lv8_FF);
}

void myip_v1_0_HLS::thread_icmp_ln64_fu_505_p2() {
    icmp_ln64_fu_505_p2 = (!word_cnt_2_reg_287.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(word_cnt_2_reg_287.read() == ap_const_lv3_6);
}

void myip_v1_0_HLS::thread_icmp_ln66_fu_525_p2() {
    icmp_ln66_fu_525_p2 = (!x_0_reg_310.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_310.read() == ap_const_lv3_5);
}

void myip_v1_0_HLS::thread_icmp_ln72_1_fu_602_p2() {
    icmp_ln72_1_fu_602_p2 = (!trunc_ln72_fu_592_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln72_fu_592_p1.read() == ap_const_lv23_0);
}

void myip_v1_0_HLS::thread_icmp_ln72_fu_596_p2() {
    icmp_ln72_fu_596_p2 = (!tmp_5_fu_582_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_582_p4.read() != ap_const_lv8_FF);
}

void myip_v1_0_HLS::thread_icmp_ln82_fu_629_p2() {
    icmp_ln82_fu_629_p2 = (!word_cnt_3_reg_321.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(word_cnt_3_reg_321.read() == ap_const_lv3_6);
}

void myip_v1_0_HLS::thread_input_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_address0 =  (sc_lv<6>) (zext_ln51_1_fu_417_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_address0 =  (sc_lv<6>) (zext_ln45_fu_380_p1.read());
    } else {
        input_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void myip_v1_0_HLS::thread_input_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read()))))) {
        input_ce0 = ap_const_logic_1;
    } else {
        input_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_input_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        input_we0 = ap_const_logic_1;
    } else {
        input_we0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_or_ln56_fu_484_p2() {
    or_ln56_fu_484_p2 = (icmp_ln56_1_fu_478_p2.read() | icmp_ln56_fu_472_p2.read());
}

void myip_v1_0_HLS::thread_or_ln72_fu_608_p2() {
    or_ln72_fu_608_p2 = (icmp_ln72_1_fu_602_p2.read() | icmp_ln72_fu_596_p2.read());
}

void myip_v1_0_HLS::thread_sext_ln67_fu_573_p1() {
    sext_ln67_fu_573_p1 = esl_sext<64,6>(add_ln67_fu_568_p2.read());
}

void myip_v1_0_HLS::thread_sub_ln67_fu_562_p2() {
    sub_ln67_fu_562_p2 = (!tmp_9_fu_542_p3.read().is_01() || !zext_ln67_2_fu_558_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_9_fu_542_p3.read()) - sc_biguint<6>(zext_ln67_2_fu_558_p1.read()));
}

void myip_v1_0_HLS::thread_tmp_2_fu_458_p4() {
    tmp_2_fu_458_p4 = bitcast_ln56_fu_454_p1.read().range(30, 23);
}

void myip_v1_0_HLS::thread_tmp_5_fu_582_p4() {
    tmp_5_fu_582_p4 = bitcast_ln72_fu_578_p1.read().range(30, 23);
}

void myip_v1_0_HLS::thread_tmp_7_fu_426_p3() {
    tmp_7_fu_426_p3 = esl_concat<6,2>(i_0_reg_276.read(), ap_const_lv2_0);
}

void myip_v1_0_HLS::thread_tmp_9_fu_542_p3() {
    tmp_9_fu_542_p3 = esl_concat<3,3>(x_0_reg_310.read(), ap_const_lv3_0);
}

void myip_v1_0_HLS::thread_tmp_last_fu_646_p2() {
    tmp_last_fu_646_p2 = (!word_cnt_3_reg_321.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(word_cnt_3_reg_321.read() == ap_const_lv3_5);
}

void myip_v1_0_HLS::thread_tmp_s_fu_550_p3() {
    tmp_s_fu_550_p3 = esl_concat<3,1>(x_0_reg_310.read(), ap_const_lv1_0);
}

void myip_v1_0_HLS::thread_trunc_ln56_fu_468_p1() {
    trunc_ln56_fu_468_p1 = bitcast_ln56_fu_454_p1.read().range(23-1, 0);
}

void myip_v1_0_HLS::thread_trunc_ln72_fu_592_p1() {
    trunc_ln72_fu_592_p1 = bitcast_ln72_fu_578_p1.read().range(23-1, 0);
}

void myip_v1_0_HLS::thread_v2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        v2_address0 =  (sc_lv<3>) (zext_ln84_fu_641_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        v2_address0 =  (sc_lv<3>) (zext_ln67_reg_725.read());
    } else {
        v2_address0 =  (sc_lv<3>) ("XXX");
    }
}

void myip_v1_0_HLS::thread_v2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(regslice_both_M_AXIS_V_data_U_apdone_blk.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        v2_ce0 = ap_const_logic_1;
    } else {
        v2_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_v2_d0() {
    v2_d0 = (!and_ln72_fu_614_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln72_fu_614_p2.read()[0].to_bool())? ap_const_lv32_0: reg_358.read());
}

void myip_v1_0_HLS::thread_v2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        v2_we0 = ap_const_logic_1;
    } else {
        v2_we0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_v_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        v_address0 =  (sc_lv<3>) (zext_ln67_1_fu_537_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        v_address0 =  (sc_lv<3>) (zext_ln51_reg_668.read());
    } else {
        v_address0 =  (sc_lv<3>) ("XXX");
    }
}

void myip_v1_0_HLS::thread_v_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        v_ce0 = ap_const_logic_1;
    } else {
        v_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_v_d0() {
    v_d0 = (!and_ln56_fu_490_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln56_fu_490_p2.read()[0].to_bool())? ap_const_lv32_0: reg_358.read());
}

void myip_v1_0_HLS::thread_v_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        v_we0 = ap_const_logic_1;
    } else {
        v_we0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_weights1_address0() {
    weights1_address0 =  (sc_lv<8>) (zext_ln51_4_fu_449_p1.read());
}

void myip_v1_0_HLS::thread_weights1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        weights1_ce0 = ap_const_logic_1;
    } else {
        weights1_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_weights2_address0() {
    weights2_address0 =  (sc_lv<5>) (sext_ln67_fu_573_p1.read());
}

void myip_v1_0_HLS::thread_weights2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        weights2_ce0 = ap_const_logic_1;
    } else {
        weights2_ce0 = ap_const_logic_0;
    }
}

void myip_v1_0_HLS::thread_word_cnt_4_fu_391_p2() {
    word_cnt_4_fu_391_p2 = (!word_cnt_1_reg_253.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(word_cnt_1_reg_253.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void myip_v1_0_HLS::thread_word_cnt_5_fu_635_p2() {
    word_cnt_5_fu_635_p2 = (!word_cnt_3_reg_321.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(word_cnt_3_reg_321.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void myip_v1_0_HLS::thread_word_cnt_6_fu_511_p2() {
    word_cnt_6_fu_511_p2 = (!word_cnt_2_reg_287.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(word_cnt_2_reg_287.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void myip_v1_0_HLS::thread_word_cnt_fu_369_p2() {
    word_cnt_fu_369_p2 = (!word_cnt_0_reg_242.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(word_cnt_0_reg_242.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void myip_v1_0_HLS::thread_x_fu_531_p2() {
    x_fu_531_p2 = (!x_0_reg_310.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_0_reg_310.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void myip_v1_0_HLS::thread_zext_ln45_fu_380_p1() {
    zext_ln45_fu_380_p1 = esl_zext<64,6>(word_cnt_0_reg_242.read());
}

void myip_v1_0_HLS::thread_zext_ln50_fu_401_p1() {
    zext_ln50_fu_401_p1 = esl_zext<9,3>(word_cnt_1_reg_253.read());
}

void myip_v1_0_HLS::thread_zext_ln51_1_fu_417_p1() {
    zext_ln51_1_fu_417_p1 = esl_zext<64,6>(i_0_reg_276.read());
}

void myip_v1_0_HLS::thread_zext_ln51_2_fu_422_p1() {
    zext_ln51_2_fu_422_p1 = esl_zext<9,6>(i_0_reg_276.read());
}

void myip_v1_0_HLS::thread_zext_ln51_3_fu_434_p1() {
    zext_ln51_3_fu_434_p1 = esl_zext<9,8>(tmp_7_fu_426_p3.read());
}

void myip_v1_0_HLS::thread_zext_ln51_4_fu_449_p1() {
    zext_ln51_4_fu_449_p1 = esl_zext<64,9>(add_ln51_1_fu_444_p2.read());
}

void myip_v1_0_HLS::thread_zext_ln51_fu_397_p1() {
    zext_ln51_fu_397_p1 = esl_zext<64,3>(word_cnt_1_reg_253.read());
}

void myip_v1_0_HLS::thread_zext_ln66_fu_521_p1() {
    zext_ln66_fu_521_p1 = esl_zext<6,3>(word_cnt_2_reg_287.read());
}

void myip_v1_0_HLS::thread_zext_ln67_1_fu_537_p1() {
    zext_ln67_1_fu_537_p1 = esl_zext<64,3>(x_0_reg_310.read());
}

void myip_v1_0_HLS::thread_zext_ln67_2_fu_558_p1() {
    zext_ln67_2_fu_558_p1 = esl_zext<6,4>(tmp_s_fu_550_p3.read());
}

void myip_v1_0_HLS::thread_zext_ln67_fu_517_p1() {
    zext_ln67_fu_517_p1 = esl_zext<64,3>(word_cnt_2_reg_287.read());
}

void myip_v1_0_HLS::thread_zext_ln84_fu_641_p1() {
    zext_ln84_fu_641_p1 = esl_zext<64,3>(word_cnt_3_reg_321.read());
}

void myip_v1_0_HLS::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln43_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln48_fu_385_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln50_fu_405_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln64_fu_505_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln66_fu_525_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(regslice_both_M_AXIS_V_data_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_629_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(regslice_both_M_AXIS_V_data_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln82_fu_629_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(M_AXIS_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(M_AXIS_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<39>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void myip_v1_0_HLS::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TDATA\" :  \"" << S_AXIS_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TVALID\" :  \"" << S_AXIS_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"S_AXIS_TREADY\" :  \"" << S_AXIS_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TLAST\" :  \"" << S_AXIS_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TDATA\" :  \"" << M_AXIS_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TVALID\" :  \"" << M_AXIS_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_AXIS_TREADY\" :  \"" << M_AXIS_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TLAST\" :  \"" << M_AXIS_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

