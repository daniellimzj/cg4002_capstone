-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity exp_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of exp_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv84_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000010110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv59_10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal table_exp_Z1_array_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_exp_Z1_array_s_ce0 : STD_LOGIC;
    signal table_exp_Z1_array_s_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal table_f_Z3_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_array_V_ce0 : STD_LOGIC;
    signal table_f_Z3_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z3_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_array_V_ce1 : STD_LOGIC;
    signal table_f_Z3_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z2_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z2_array_V_ce0 : STD_LOGIC;
    signal table_f_Z2_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_22_fu_265_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_reg_1149 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_reg_1149_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_reg_1149_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_reg_1149_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_reg_1149_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_reg_1149_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1154 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1154_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1154_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1154_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1154_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1154_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1161 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1161_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1161_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1161_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1161_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1161_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln253_fu_341_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1167 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1167_pp0_iter1_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1167_pp0_iter2_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1167_pp0_iter3_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1167_pp0_iter4_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_13_fu_415_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_13_reg_1172 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_exp_V_3_fu_522_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1177 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1177_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1177_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1177_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1177_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln338_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1184_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1184_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1184_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1184_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1192 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1192_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1192_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1192_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1192_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_diff_hi_V_reg_1197 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1197_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1202 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1202_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1202_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1209 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1209_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_V_fu_628_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_V_reg_1215 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_V_reg_1215_pp0_iter2_reg : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_ind_V_reg_1220 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_677_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_i_reg_1240 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln657_fu_714_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln657_reg_1245 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_1255 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_1260 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_1265 : STD_LOGIC_VECTOR (49 downto 0);
    signal or_ln214_1_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln214_1_reg_1270 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1047_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp6_reg_1275 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp16_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln498_1_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_2_fu_646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_3_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_273_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_3_fu_283_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln833_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_3_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln502_fu_317_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_s_fu_327_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_fu_335_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal m_frac_l_V_fu_349_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_exp_fu_321_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1311_fu_369_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_fu_375_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_exp_2_fu_379_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1311_1_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1285_fu_395_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal r_V_fu_399_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal sext_ln682_fu_357_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal zext_ln1287_fu_391_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln1287_fu_405_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_1_fu_409_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_l_V_fu_423_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1253_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fix_hi_V_fu_449_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_23_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_fu_471_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1138_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln805_fu_499_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_fu_483_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln805_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln805_fu_508_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_15_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln805_fu_514_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_fu_437_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_4_fu_443_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1322_fu_536_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_544_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_15_fu_561_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_15_fu_561_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal tmp_9_fu_570_p4 : STD_LOGIC_VECTOR (70 downto 0);
    signal rhs_V_1_fu_580_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal lhs_V_fu_567_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal sext_ln682_2_fu_588_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal ret_V_3_fu_592_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal f_Z4_V_fu_654_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_2_fu_667_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_1_fu_664_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_4_fu_671_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_16_fu_694_p0 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_16_fu_694_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_16_fu_694_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_s_fu_700_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln657_fu_710_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_5_fu_724_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln657_1_fu_727_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_1_fu_736_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal lshr_ln662_6_fu_746_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal exp_Z2P_m_1_V_fu_730_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_17_fu_763_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_17_fu_763_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_17_fu_763_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal lhs_V_2_fu_779_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_2_fu_769_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_2_fu_794_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln657_2_fu_798_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln682_fu_790_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln657_3_fu_804_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_808_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_V_3_fu_838_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal r_V_18_fu_853_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_18_fu_853_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_6_fu_841_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal r_V_18_fu_853_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln1146_fu_875_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal zext_ln657_5_fu_867_p1 : STD_LOGIC_VECTOR (107 downto 0);
    signal lhs_V_4_fu_859_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal trunc_ln_fu_879_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln1146_fu_871_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal add_ln1146_1_fu_893_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_7_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_907_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_2_fu_912_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_919_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln849_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_940_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_7_fu_887_p2 : STD_LOGIC_VECTOR (107 downto 0);
    signal tmp_fu_961_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_6_fu_971_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln168_fu_989_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_fu_993_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_4_fu_981_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_24_fu_999_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln338_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln849_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln849_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln214_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln339_fu_947_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln512_fu_1009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln338_1_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln849_1_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_1_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln849_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln849_2_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp19_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln853_fu_955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln936_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_pinf_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln214_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln214_fu_1110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln214_1_fu_1117_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln214_2_fu_1125_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1138_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal r_V_16_fu_694_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_16_fu_694_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_17_fu_763_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_17_fu_763_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal r_V_18_fu_853_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_18_fu_853_p10 : STD_LOGIC_VECTOR (99 downto 0);

    component myip_v1_0_HLS_maceOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component exp_generic_doublbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component exp_generic_doublcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component exp_generic_doubldEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    table_exp_Z1_array_s_U : component exp_generic_doublbkb
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_exp_Z1_array_s_address0,
        ce0 => table_exp_Z1_array_s_ce0,
        q0 => table_exp_Z1_array_s_q0);

    table_f_Z3_array_V_U : component exp_generic_doublcud
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z3_array_V_address0,
        ce0 => table_f_Z3_array_V_ce0,
        q0 => table_f_Z3_array_V_q0,
        address1 => table_f_Z3_array_V_address1,
        ce1 => table_f_Z3_array_V_ce1,
        q1 => table_f_Z3_array_V_q1);

    table_f_Z2_array_V_U : component exp_generic_doubldEe
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z2_array_V_address0,
        ce0 => table_f_Z2_array_V_ce0,
        q0 => table_f_Z2_array_V_q0);

    myip_v1_0_HLS_maceOg_U1 : component myip_v1_0_HLS_maceOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        din0 => grp_fu_1138_p0,
        din1 => m_fix_hi_V_fu_449_p4,
        din2 => rhs_V_fu_471_p3,
        dout => grp_fu_1138_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Z2_V_reg_1202 <= ret_V_3_fu_592_p2(50 downto 43);
                Z3_V_reg_1209 <= ret_V_3_fu_592_p2(42 downto 35);
                Z4_V_reg_1215 <= Z4_V_fu_628_p1;
                Z4_ind_V_reg_1220 <= ret_V_3_fu_592_p2(34 downto 27);
                and_ln18_reg_1161 <= and_ln18_fu_311_p2;
                and_ln18_reg_1161_pp0_iter1_reg <= and_ln18_reg_1161;
                and_ln209_reg_1154 <= and_ln209_fu_299_p2;
                and_ln209_reg_1154_pp0_iter1_reg <= and_ln209_reg_1154;
                icmp_ln338_1_reg_1192 <= icmp_ln338_1_fu_552_p2;
                icmp_ln338_1_reg_1192_pp0_iter1_reg <= icmp_ln338_1_reg_1192;
                icmp_ln338_reg_1184 <= icmp_ln338_fu_530_p2;
                icmp_ln338_reg_1184_pp0_iter1_reg <= icmp_ln338_reg_1184;
                m_diff_hi_V_reg_1197 <= ret_V_3_fu_592_p2(58 downto 51);
                p_Result_22_reg_1149 <= p_Val2_s_fu_261_p1(63 downto 63);
                p_Result_22_reg_1149_pp0_iter1_reg <= p_Result_22_reg_1149;
                r_V_13_reg_1172 <= r_V_13_fu_415_p3;
                r_exp_V_3_reg_1177 <= r_exp_V_3_fu_522_p3;
                r_exp_V_3_reg_1177_pp0_iter1_reg <= r_exp_V_3_reg_1177;
                select_ln253_reg_1167 <= select_ln253_fu_341_p3;
                select_ln253_reg_1167_pp0_iter1_reg <= select_ln253_reg_1167;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_1202_pp0_iter2_reg <= Z2_V_reg_1202;
                Z2_V_reg_1202_pp0_iter3_reg <= Z2_V_reg_1202_pp0_iter2_reg;
                Z3_V_reg_1209_pp0_iter2_reg <= Z3_V_reg_1209;
                Z4_V_reg_1215_pp0_iter2_reg <= Z4_V_reg_1215;
                add_ln657_reg_1245 <= add_ln657_fu_714_p2;
                and_ln18_reg_1161_pp0_iter2_reg <= and_ln18_reg_1161_pp0_iter1_reg;
                and_ln18_reg_1161_pp0_iter3_reg <= and_ln18_reg_1161_pp0_iter2_reg;
                and_ln18_reg_1161_pp0_iter4_reg <= and_ln18_reg_1161_pp0_iter3_reg;
                and_ln18_reg_1161_pp0_iter5_reg <= and_ln18_reg_1161_pp0_iter4_reg;
                and_ln209_reg_1154_pp0_iter2_reg <= and_ln209_reg_1154_pp0_iter1_reg;
                and_ln209_reg_1154_pp0_iter3_reg <= and_ln209_reg_1154_pp0_iter2_reg;
                and_ln209_reg_1154_pp0_iter4_reg <= and_ln209_reg_1154_pp0_iter3_reg;
                and_ln209_reg_1154_pp0_iter5_reg <= and_ln209_reg_1154_pp0_iter4_reg;
                exp_Z1P_m_1_V_reg_1260 <= exp_Z1P_m_1_l_V_fu_808_p2(51 downto 2);
                exp_Z1_V_reg_1255 <= table_exp_Z1_array_s_q0;
                exp_Z1_hi_V_reg_1265 <= table_exp_Z1_array_s_q0(57 downto 8);
                icmp_ln338_1_reg_1192_pp0_iter2_reg <= icmp_ln338_1_reg_1192_pp0_iter1_reg;
                icmp_ln338_1_reg_1192_pp0_iter3_reg <= icmp_ln338_1_reg_1192_pp0_iter2_reg;
                icmp_ln338_1_reg_1192_pp0_iter4_reg <= icmp_ln338_1_reg_1192_pp0_iter3_reg;
                icmp_ln338_reg_1184_pp0_iter2_reg <= icmp_ln338_reg_1184_pp0_iter1_reg;
                icmp_ln338_reg_1184_pp0_iter3_reg <= icmp_ln338_reg_1184_pp0_iter2_reg;
                icmp_ln338_reg_1184_pp0_iter4_reg <= icmp_ln338_reg_1184_pp0_iter3_reg;
                m_diff_hi_V_reg_1197_pp0_iter2_reg <= m_diff_hi_V_reg_1197;
                or_ln214_1_reg_1270 <= or_ln214_1_fu_834_p2;
                p_Result_22_reg_1149_pp0_iter2_reg <= p_Result_22_reg_1149_pp0_iter1_reg;
                p_Result_22_reg_1149_pp0_iter3_reg <= p_Result_22_reg_1149_pp0_iter2_reg;
                p_Result_22_reg_1149_pp0_iter4_reg <= p_Result_22_reg_1149_pp0_iter3_reg;
                p_Result_22_reg_1149_pp0_iter5_reg <= p_Result_22_reg_1149_pp0_iter4_reg;
                r_exp_V_3_reg_1177_pp0_iter2_reg <= r_exp_V_3_reg_1177_pp0_iter1_reg;
                r_exp_V_3_reg_1177_pp0_iter3_reg <= r_exp_V_3_reg_1177_pp0_iter2_reg;
                r_exp_V_3_reg_1177_pp0_iter4_reg <= r_exp_V_3_reg_1177_pp0_iter3_reg;
                sel_tmp16_reg_1280 <= sel_tmp16_fu_1089_p2;
                    sel_tmp6_reg_1275(62 downto 0) <= sel_tmp6_fu_1047_p3(62 downto 0);
                select_ln253_reg_1167_pp0_iter2_reg <= select_ln253_reg_1167_pp0_iter1_reg;
                select_ln253_reg_1167_pp0_iter3_reg <= select_ln253_reg_1167_pp0_iter2_reg;
                select_ln253_reg_1167_pp0_iter4_reg <= select_ln253_reg_1167_pp0_iter3_reg;
                    tmp_i_reg_1240(25 downto 0) <= tmp_i_fu_677_p4(25 downto 0);    tmp_i_reg_1240(42 downto 35) <= tmp_i_fu_677_p4(42 downto 35);
            end if;
        end if;
    end process;
    tmp_i_reg_1240(34 downto 26) <= "000000000";
    sel_tmp6_reg_1275(63) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z4_V_fu_628_p1 <= ret_V_3_fu_592_p2(35 - 1 downto 0);
    add_ln1146_1_fu_893_p2 <= std_logic_vector(unsigned(trunc_ln_fu_879_p3) + unsigned(zext_ln1146_fu_871_p1));
    add_ln657_2_fu_798_p2 <= std_logic_vector(unsigned(zext_ln657_2_fu_794_p1) + unsigned(exp_Z2P_m_1_V_fu_730_p2));
    add_ln657_fu_714_p2 <= std_logic_vector(unsigned(zext_ln657_fu_710_p1) + unsigned(ret_V_4_fu_671_p2));
    add_ln805_fu_508_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_5_fu_483_p4));
    and_ln18_fu_311_p2 <= (icmp_ln833_fu_287_p2 and icmp_ln833_3_fu_305_p2);
    and_ln209_fu_299_p2 <= (icmp_ln837_fu_293_p2 and icmp_ln833_fu_287_p2);
    and_ln338_1_fu_1061_p2 <= (xor_ln338_1_fu_1055_p2 and icmp_ln338_reg_1184_pp0_iter4_reg);
    and_ln338_fu_1019_p2 <= (or_ln338_fu_935_p2 and icmp_ln338_reg_1184_pp0_iter4_reg);
    and_ln849_fu_1029_p2 <= (xor_ln338_fu_1024_p2 and icmp_ln849_fu_929_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv64_0 when (sel_tmp16_reg_1280(0) = '1') else 
        select_ln214_2_fu_1125_p3;
    bitcast_ln512_fu_1009_p1 <= p_Result_24_fu_999_p4;
    e_frac_V_fu_335_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_327_p3));
    exp_Z1P_m_1_l_V_fu_808_p2 <= std_logic_vector(unsigned(zext_ln682_fu_790_p1) + unsigned(zext_ln657_3_fu_804_p1));
    exp_Z2P_m_1_V_fu_730_p2 <= std_logic_vector(unsigned(ret_V_5_fu_724_p1) + unsigned(zext_ln657_1_fu_727_p1));
    f_Z4_V_fu_654_p4 <= table_f_Z3_array_V_q0(25 downto 16);
    grp_fu_1138_p0 <= ap_const_lv31_5C55(16 - 1 downto 0);
    icmp_ln338_1_fu_552_p2 <= "0" when (shl_ln_fu_544_p3 = sext_ln682_fu_357_p1) else "1";
    icmp_ln338_fu_530_p2 <= "1" when (signed(m_exp_fu_321_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln805_fu_502_p2 <= "1" when (trunc_ln805_fu_499_p1 = ap_const_lv18_0) else "0";
    icmp_ln833_3_fu_305_p2 <= "1" when (tmp_V_3_fu_283_p1 = ap_const_lv52_0) else "0";
    icmp_ln833_fu_287_p2 <= "1" when (tmp_V_fu_273_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln837_fu_293_p2 <= "0" when (tmp_V_3_fu_283_p1 = ap_const_lv52_0) else "1";
    icmp_ln849_fu_929_p2 <= "1" when (signed(tmp_8_fu_919_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln853_fu_955_p2 <= "1" when (signed(r_exp_V_2_fu_912_p3) < signed(ap_const_lv13_1C02)) else "0";
    isNeg_fu_361_p3 <= m_exp_fu_321_p2(11 downto 11);
    lhs_V_1_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_V_reg_1215_pp0_iter2_reg),36));
    lhs_V_2_fu_779_p5 <= (((Z2_V_reg_1202_pp0_iter3_reg & ap_const_lv1_0) & tmp_1_fu_736_p4) & ap_const_lv2_0);
    lhs_V_3_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_V_reg_1255),59));
    lhs_V_4_fu_859_p3 <= (ret_V_6_fu_841_p2 & ap_const_lv49_0);
        lhs_V_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_13_reg_1172),73));

    lshr_ln662_6_fu_746_p4 <= ((Z2_V_reg_1202_pp0_iter3_reg & ap_const_lv1_0) & tmp_1_fu_736_p4);
    m_exp_2_fu_379_p3 <= 
        sext_ln1311_fu_375_p1 when (isNeg_fu_361_p3(0) = '1') else 
        m_exp_fu_321_p2;
    m_exp_fu_321_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(zext_ln502_fu_317_p1));
    m_fix_hi_V_fu_449_p4 <= r_V_13_fu_415_p3(70 downto 55);
    m_fix_l_V_fu_423_p4 <= r_V_13_fu_415_p3(70 downto 7);
    m_frac_l_V_fu_349_p3 <= (select_ln253_fu_341_p3 & ap_const_lv7_0);
    or_ln214_1_fu_834_p2 <= (and_ln209_reg_1154_pp0_iter4_reg or and_ln18_reg_1161_pp0_iter4_reg);
    or_ln214_fu_1105_p2 <= (x_is_pinf_fu_1100_p2 or and_ln209_reg_1154_pp0_iter5_reg);
    or_ln338_fu_935_p2 <= (icmp_ln849_fu_929_p2 or icmp_ln338_1_reg_1192_pp0_iter4_reg);
    or_ln849_1_fu_1066_p2 <= (icmp_ln849_fu_929_p2 or icmp_ln338_reg_1184_pp0_iter4_reg);
    or_ln849_2_fu_1077_p2 <= (xor_ln849_fu_1071_p2 or and_ln338_1_fu_1061_p2);
    or_ln849_fu_1035_p2 <= (and_ln849_fu_1029_p2 or and_ln338_fu_1019_p2);
    out_exp_V_fu_993_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) + unsigned(trunc_ln168_fu_989_p1));
    p_Result_15_fu_492_p3 <= grp_fu_1138_p3(30 downto 30);
    p_Result_22_fu_265_p3 <= p_Val2_s_fu_261_p1(63 downto 63);
    p_Result_23_fu_459_p3 <= r_V_13_fu_415_p3(70 downto 70);
    p_Result_24_fu_999_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_993_p2) & tmp_V_4_fu_981_p3);
    p_Result_s_fu_327_p3 <= (ap_const_lv2_1 & tmp_V_3_fu_283_p1);
    p_Val2_s_fu_261_p1 <= x;
    r_V_13_fu_415_p3 <= 
        sext_ln1287_fu_405_p1 when (isNeg_fu_361_p3(0) = '1') else 
        r_V_1_fu_409_p2;
    r_V_15_fu_561_p1 <= r_exp_V_3_reg_1177;
    r_V_15_fu_561_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv84_58B90BFBE8E7BCD5E4) * signed(r_V_15_fu_561_p1))), 84));
    r_V_16_fu_694_p0 <= r_V_16_fu_694_p00(36 - 1 downto 0);
    r_V_16_fu_694_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_fu_671_p2),79));
    r_V_16_fu_694_p1 <= r_V_16_fu_694_p10(43 - 1 downto 0);
    r_V_16_fu_694_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_677_p4),79));
    r_V_16_fu_694_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_16_fu_694_p0) * unsigned(r_V_16_fu_694_p1), 79));
    r_V_17_fu_763_p0 <= r_V_17_fu_763_p00(44 - 1 downto 0);
    r_V_17_fu_763_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_fu_730_p2),93));
    r_V_17_fu_763_p1 <= r_V_17_fu_763_p10(49 - 1 downto 0);
    r_V_17_fu_763_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln662_6_fu_746_p4),93));
    r_V_17_fu_763_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_17_fu_763_p0) * unsigned(r_V_17_fu_763_p1), 93));
    r_V_18_fu_853_p0 <= r_V_18_fu_853_p00(50 - 1 downto 0);
    r_V_18_fu_853_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1260),100));
    r_V_18_fu_853_p1 <= r_V_18_fu_853_p10(50 - 1 downto 0);
    r_V_18_fu_853_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1265),100));
    r_V_18_fu_853_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_fu_853_p0) * unsigned(r_V_18_fu_853_p1), 100));
    r_V_1_fu_409_p2 <= std_logic_vector(shift_left(unsigned(sext_ln682_fu_357_p1),to_integer(unsigned('0' & zext_ln1287_fu_391_p1(31-1 downto 0)))));
    r_V_3_fu_437_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_V_fu_423_p4),to_integer(unsigned('0' & zext_ln1253_fu_433_p1(31-1 downto 0)))));
    r_V_4_fu_443_p2 <= std_logic_vector(shift_right(signed(m_fix_l_V_fu_423_p4),to_integer(unsigned('0' & zext_ln1253_fu_433_p1(31-1 downto 0)))));
    r_V_fu_399_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_fu_349_p3),to_integer(unsigned('0' & zext_ln1285_fu_395_p1(31-1 downto 0)))));
    r_exp_V_2_fu_912_p3 <= 
        r_exp_V_3_reg_1177_pp0_iter4_reg when (tmp_7_fu_899_p3(0) = '1') else 
        r_exp_V_fu_907_p2;
    r_exp_V_3_fu_522_p3 <= 
        select_ln805_fu_514_p3 when (p_Result_15_fu_492_p3(0) = '1') else 
        tmp_5_fu_483_p4;
    r_exp_V_fu_907_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(r_exp_V_3_reg_1177_pp0_iter4_reg));
    ret_V_3_fu_592_p2 <= std_logic_vector(signed(lhs_V_fu_567_p1) - signed(sext_ln682_2_fu_588_p1));
    ret_V_4_fu_671_p2 <= std_logic_vector(unsigned(rhs_V_2_fu_667_p1) + unsigned(lhs_V_1_fu_664_p1));
    ret_V_5_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_reg_1240),44));
    ret_V_6_fu_841_p2 <= std_logic_vector(unsigned(ap_const_lv59_10) + unsigned(lhs_V_3_fu_838_p1));
    ret_V_7_fu_887_p2 <= std_logic_vector(unsigned(zext_ln657_5_fu_867_p1) + unsigned(lhs_V_4_fu_859_p3));
    rhs_V_1_fu_580_p3 <= (tmp_9_fu_570_p4 & ap_const_lv1_0);
    rhs_V_2_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_V_fu_654_p4),36));
    rhs_V_fu_471_p3 <= (p_Result_23_fu_459_p3 & ap_const_lv18_20000);
    sel_tmp16_fu_1089_p2 <= (tmp19_fu_1083_p2 and icmp_ln853_fu_955_p2);
    sel_tmp5_fu_1041_p2 <= (xor_ln214_fu_1013_p2 and or_ln849_fu_1035_p2);
    sel_tmp6_fu_1047_p3 <= 
        select_ln339_fu_947_p3 when (sel_tmp5_fu_1041_p2(0) = '1') else 
        bitcast_ln512_fu_1009_p1;
    select_ln1322_fu_536_p3 <= 
        r_V_3_fu_437_p2 when (isNeg_fu_361_p3(0) = '1') else 
        r_V_4_fu_443_p2;
    select_ln214_1_fu_1117_p3 <= 
        select_ln214_fu_1110_p3 when (or_ln214_fu_1105_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln214_2_fu_1125_p3 <= 
        select_ln214_1_fu_1117_p3 when (or_ln214_1_reg_1270(0) = '1') else 
        sel_tmp6_reg_1275;
    select_ln214_fu_1110_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (and_ln209_reg_1154_pp0_iter5_reg(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln253_fu_341_p3 <= 
        e_frac_V_fu_335_p2 when (p_Result_22_fu_265_p3(0) = '1') else 
        p_Result_s_fu_327_p3;
    select_ln339_fu_947_p3 <= 
        ap_const_lv64_0 when (tmp_10_fu_940_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln805_fu_514_p3 <= 
        tmp_5_fu_483_p4 when (icmp_ln805_fu_502_p2(0) = '1') else 
        add_ln805_fu_508_p2;
        sext_ln1287_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_399_p2),71));

        sext_ln1311_1_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_exp_2_fu_379_p3),32));

        sext_ln1311_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_369_p2),12));

        sext_ln682_2_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_580_p3),73));

        sext_ln682_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_fu_349_p3),71));

    shl_ln_fu_544_p3 <= (select_ln1322_fu_536_p3 & ap_const_lv7_0);
    sub_ln1311_fu_369_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_V_fu_273_p4));
    table_exp_Z1_array_s_address0 <= zext_ln498_fu_650_p1(8 - 1 downto 0);

    table_exp_Z1_array_s_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            table_exp_Z1_array_s_ce0 <= ap_const_logic_1;
        else 
            table_exp_Z1_array_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z2_array_V_address0 <= zext_ln498_3_fu_720_p1(8 - 1 downto 0);

    table_f_Z2_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            table_f_Z2_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z2_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z3_array_V_address0 <= zext_ln498_1_fu_642_p1(8 - 1 downto 0);
    table_f_Z3_array_V_address1 <= zext_ln498_2_fu_646_p1(8 - 1 downto 0);

    table_f_Z3_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            table_f_Z3_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z3_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    table_f_Z3_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            table_f_Z3_array_V_ce1 <= ap_const_logic_1;
        else 
            table_f_Z3_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp19_fu_1083_p2 <= (xor_ln214_fu_1013_p2 and or_ln849_2_fu_1077_p2);
    tmp_10_fu_940_p3 <= select_ln253_reg_1167_pp0_iter4_reg(53 downto 53);
    tmp_1_fu_736_p4 <= table_f_Z2_array_V_q0(41 downto 2);
    tmp_2_fu_769_p4 <= r_V_17_fu_763_p2(92 downto 57);
    tmp_5_fu_483_p4 <= grp_fu_1138_p3(30 downto 18);
    tmp_6_fu_971_p4 <= ret_V_7_fu_887_p2(104 downto 53);
    tmp_7_fu_899_p3 <= add_ln1146_1_fu_893_p2(106 downto 106);
    tmp_8_fu_919_p4 <= r_exp_V_2_fu_912_p3(12 downto 10);
    tmp_9_fu_570_p4 <= r_V_15_fu_561_p2(83 downto 13);
    tmp_V_3_fu_283_p1 <= p_Val2_s_fu_261_p1(52 - 1 downto 0);
    tmp_V_4_fu_981_p3 <= 
        tmp_fu_961_p4 when (tmp_7_fu_899_p3(0) = '1') else 
        tmp_6_fu_971_p4;
    tmp_V_fu_273_p4 <= p_Val2_s_fu_261_p1(62 downto 52);
    tmp_fu_961_p4 <= ret_V_7_fu_887_p2(105 downto 54);
    tmp_i_fu_677_p4 <= ((Z3_V_reg_1209_pp0_iter2_reg & ap_const_lv9_0) & table_f_Z3_array_V_q1);
    tmp_s_fu_700_p4 <= r_V_16_fu_694_p2(78 downto 59);
    trunc_ln1146_fu_875_p1 <= ret_V_6_fu_841_p2(58 - 1 downto 0);
    trunc_ln168_fu_989_p1 <= r_exp_V_2_fu_912_p3(11 - 1 downto 0);
    trunc_ln805_fu_499_p1 <= grp_fu_1138_p3(18 - 1 downto 0);
    trunc_ln_fu_879_p3 <= (trunc_ln1146_fu_875_p1 & ap_const_lv49_0);
    x_is_pinf_fu_1100_p2 <= (xor_ln936_fu_1095_p2 and and_ln18_reg_1161_pp0_iter5_reg);
    xor_ln214_fu_1013_p2 <= (or_ln214_1_fu_834_p2 xor ap_const_lv1_1);
    xor_ln338_1_fu_1055_p2 <= (or_ln338_fu_935_p2 xor ap_const_lv1_1);
    xor_ln338_fu_1024_p2 <= (icmp_ln338_reg_1184_pp0_iter4_reg xor ap_const_lv1_1);
    xor_ln849_fu_1071_p2 <= (or_ln849_1_fu_1066_p2 xor ap_const_lv1_1);
    xor_ln936_fu_1095_p2 <= (p_Result_22_reg_1149_pp0_iter5_reg xor ap_const_lv1_1);
    zext_ln1146_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_fu_853_p2),107));
    zext_ln1253_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_1_fu_387_p1),64));
    zext_ln1285_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_1_fu_387_p1),61));
    zext_ln1287_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_1_fu_387_p1),71));
    zext_ln498_1_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_V_reg_1220),64));
    zext_ln498_2_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_reg_1209),64));
    zext_ln498_3_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_1202_pp0_iter2_reg),64));
    zext_ln498_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1197_pp0_iter2_reg),64));
    zext_ln502_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_273_p4),12));
    zext_ln657_1_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_reg_1245),44));
    zext_ln657_2_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_769_p4),44));
    zext_ln657_3_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_2_fu_798_p2),52));
    zext_ln657_5_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_fu_853_p2),108));
    zext_ln657_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_700_p4),36));
    zext_ln682_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_2_fu_779_p5),52));
end behav;
